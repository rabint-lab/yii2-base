{"version":3,"file":"mds.bs.datetimepicker.js","mappings":"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","sources":["webpack://md.bootstrappersiandatetimepicker/./src/mds.bs.datetimepicker-exposed.ts","webpack://md.bootstrappersiandatetimepicker/./node_modules/expose-loader/dist/runtime/getGlobalThis.js","webpack://md.bootstrappersiandatetimepicker/external var \"bootstrap\"","webpack://md.bootstrappersiandatetimepicker/./src/mds.bs.datetimepicker.ts","webpack://md.bootstrappersiandatetimepicker/webpack/bootstrap","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/define property getters","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/global","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/hasOwnProperty shorthand","webpack://md.bootstrappersiandatetimepicker/webpack/runtime/make namespace object","webpack://md.bootstrappersiandatetimepicker/webpack/startup"],"sourcesContent":["var ___EXPOSE_LOADER_IMPORT___ = require(\"-!../node_modules/ts-loader/index.js!./mds.bs.datetimepicker.ts\");\nvar ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\"../node_modules/expose-loader/dist/runtime/getGlobalThis.js\");\nvar ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___;\nif (typeof ___EXPOSE_LOADER_GLOBAL_THIS___[\"mds\"] === 'undefined') ___EXPOSE_LOADER_GLOBAL_THIS___[\"mds\"] = ___EXPOSE_LOADER_IMPORT___;\nmodule.exports = ___EXPOSE_LOADER_IMPORT___;\n","\"use strict\";\n\n// eslint-disable-next-line func-names\nmodule.exports = function () {\n  if (typeof globalThis === \"object\") {\n    return globalThis;\n  }\n\n  var g;\n\n  try {\n    // This works if eval is allowed (see CSP)\n    // eslint-disable-next-line no-new-func\n    g = this || new Function(\"return this\")();\n  } catch (e) {\n    // This works if the window reference is available\n    if (typeof window === \"object\") {\n      return window;\n    } // This works if the self reference is available\n\n\n    if (typeof self === \"object\") {\n      return self;\n    } // This works if the global reference is available\n\n\n    if (typeof global !== \"undefined\") {\n      return global;\n    }\n  }\n\n  return g;\n}();","const __WEBPACK_NAMESPACE_OBJECT__ = bootstrap;","﻿import { Modal, Popover } from \"bootstrap\";\r\n\r\nexport class MdsPersianDateTimePicker {\r\n  constructor(element: Element, setting: MdsPersianDateTimePickerSetting) {\r\n    setting = MdsPersianDateTimePicker.extend(new MdsPersianDateTimePickerSetting(), setting);\r\n    if (!element) throw new Error(`MdsPersianDateTimePicker => element is null!`);\r\n    if (setting.rangeSelector && (setting.toDate || setting.fromDate)) throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' or 'fromDate' and 'rangeSelector' together`);\r\n    if (setting.toDate && setting.fromDate) throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' and 'fromDate' together`);\r\n    if (!setting.groupId && (setting.toDate || setting.fromDate)) throw new Error(`MdsPersianDateTimePicker => When you set 'toDate' or 'fromDate' true, you have to set 'groupId'`);\r\n\r\n    if (!setting.textFormat) {\r\n      setting.textFormat = 'yyyy/MM/dd';\r\n      if (setting.enableTimePicker)\r\n        setting.textFormat += ' HH:mm';\r\n    }\r\n    if (!setting.dateFormat) {\r\n      setting.dateFormat = 'yyyy/MM/dd';\r\n      if (setting.enableTimePicker)\r\n        setting.dateFormat += ' HH:mm';\r\n    }\r\n    if (setting.yearOffset > 15)\r\n      setting.yearOffset = 15;\r\n\r\n    this.setting = setting;\r\n    this.setting.selectedDate = setting.selectedDate ? MdsPersianDateTimePicker.getClonedDate(setting.selectedDate) : null;\r\n    this.setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow) ?? new Date();\r\n\r\n    this.guid = MdsPersianDateTimePicker.newGuid();\r\n    this.element = element;\r\n    this.element.setAttribute(\"data-mds-dtp-guid\", this.guid);\r\n    MdsPersianDateTimePickerData.set(this.guid, this);\r\n\r\n    this.initializeBsPopover(setting);\r\n  }\r\n\r\n  // #region jalali calendar\r\n\r\n  private static toJalali(gy: number, gm: number, gd: number): JalaliJsonModel {\r\n    return this.d2j(this.g2d(gy, gm, gd));\r\n  }\r\n  private static toGregorian(jy: number, jm: number, jd: number): GregorianJsonModel {\r\n    return this.d2g(this.j2d(jy, jm, jd));\r\n  }\r\n  // private static isValidJalaliDate(jy: number, jm: number, jd: number): boolean {\r\n  //   return jy >= -61 && jy <= 3177 &&\r\n  //     jm >= 1 && jm <= 12 &&\r\n  //     jd >= 1 && jd <= this.jalaliMonthLength(jy, jm);\r\n  // }\r\n  private static isLeapJalaliYear(jy: number): boolean {\r\n    return this.jalCal(jy).leap === 0;\r\n  }\r\n  // private static jalaliMonthLength(jy: number, jm: number): number {\r\n  //   if (jm <= 6) return 31;\r\n  //   if (jm <= 11) return 30;\r\n  //   if (this.isLeapJalaliYear(jy)) return 30;\r\n  //   return 29;\r\n  // }\r\n  private static jalCal(jy: number): JalCalModel {\r\n    // Jalali years starting the 33-year rule.\r\n    let breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178],\r\n      bl = breaks.length,\r\n      gy = jy + 621,\r\n      leapJ = -14,\r\n      jp = breaks[0],\r\n      jm,\r\n      jump = 1,\r\n      leap,\r\n      n,\r\n      i;\r\n\r\n    if (jy < jp || jy >= breaks[bl - 1])\r\n      throw new Error('Invalid Jalali year ' + jy);\r\n\r\n    // Find the limiting years for the Jalali year jy.\r\n    for (i = 1; i < bl; i += 1) {\r\n      jm = breaks[i];\r\n      jump = jm - jp;\r\n      if (jy < jm)\r\n        break;\r\n      leapJ = leapJ + this.div(jump, 33) * 8 + this.div(this.mod(jump, 33), 4);\r\n      jp = jm;\r\n    }\r\n    n = jy - jp;\r\n\r\n    // Find the number of leap years from AD 621 to the beginning\r\n    // of the current Jalali year in the Persian calendar.\r\n    leapJ = leapJ + this.div(n, 33) * 8 + this.div(this.mod(n, 33) + 3, 4);\r\n    if (this.mod(jump, 33) === 4 && jump - n === 4)\r\n      leapJ += 1;\r\n\r\n    // And the same in the Gregorian calendar (until the year gy).\r\n    let leapG = this.div(gy, 4) - this.div((this.div(gy, 100) + 1) * 3, 4) - 150;\r\n\r\n    // Determine the Gregorian date of Farvardin the 1st.\r\n    let march = 20 + leapJ - leapG;\r\n\r\n    // Find how many years have passed since the last leap year.\r\n    if (jump - n < 6)\r\n      n = n - jump + this.div(jump + 4, 33) * 33;\r\n    leap = this.mod(this.mod(n + 1, 33) - 1, 4);\r\n    if (leap === -1) leap = 4;\r\n\r\n    return {\r\n      leap: leap,\r\n      gy: gy,\r\n      march: march\r\n    };\r\n  }\r\n  private static j2d(jy: number, jm: number, jd: number): number {\r\n    let r = this.jalCal(jy);\r\n    return this.g2d(r.gy, 3, r.march) + (jm - 1) * 31 - this.div(jm, 7) * (jm - 7) + jd - 1;\r\n  }\r\n  private static d2j(jdn: number): JalaliJsonModel {\r\n    let gy = this.d2g(jdn).gy, // Calculate Gregorian year (gy).\r\n      jy = gy - 621,\r\n      r = this.jalCal(jy),\r\n      jdn1F = this.g2d(gy, 3, r.march),\r\n      jd,\r\n      jm,\r\n      k;\r\n\r\n    // Find number of days that passed since 1 Farvardin.\r\n    k = jdn - jdn1F;\r\n    if (k >= 0) {\r\n      if (k <= 185) {\r\n        // The first 6 months.\r\n        jm = 1 + this.div(k, 31);\r\n        jd = this.mod(k, 31) + 1;\r\n        return {\r\n          jy: jy,\r\n          jm: jm,\r\n          jd: jd\r\n        };\r\n      } else {\r\n        // The remaining months.\r\n        k -= 186;\r\n      }\r\n    } else {\r\n      // Previous Jalali year.\r\n      jy -= 1;\r\n      k += 179;\r\n      if (r.leap === 1)\r\n        k += 1;\r\n    }\r\n    jm = 7 + this.div(k, 30);\r\n    jd = this.mod(k, 30) + 1;\r\n    return {\r\n      jy: jy,\r\n      jm: jm,\r\n      jd: jd\r\n    };\r\n  }\r\n  private static g2d(gy: number, gm: number, gd: number): number {\r\n    let d = this.div((gy + this.div(gm - 8, 6) + 100100) * 1461, 4) +\r\n      this.div(153 * this.mod(gm + 9, 12) + 2, 5) +\r\n      gd - 34840408;\r\n    d = d - this.div(this.div(gy + 100100 + this.div(gm - 8, 6), 100) * 3, 4) + 752;\r\n    return d;\r\n  }\r\n  private static d2g(jdn: number): GregorianJsonModel {\r\n    let j;\r\n    j = 4 * jdn + 139361631;\r\n    j = j + this.div(this.div(4 * jdn + 183187720, 146097) * 3, 4) * 4 - 3908;\r\n    let i = this.div(this.mod(j, 1461), 4) * 5 + 308;\r\n    let gd = this.div(this.mod(i, 153), 5) + 1;\r\n    let gm = this.mod(this.div(i, 153), 12) + 1;\r\n    let gy = this.div(j, 1461) - 100100 + this.div(8 - gm, 6);\r\n    return {\r\n      gy: gy,\r\n      gm: gm,\r\n      gd: gd\r\n    };\r\n  }\r\n  private static div(a: number, b: number): number {\r\n    return ~~(a / b);\r\n  }\r\n  private static mod(a: number, b: number): number {\r\n    return a - ~~(a / b) * b;\r\n  }\r\n\r\n  //#endregion jalali calendar\r\n\r\n  // #region Template\r\n\r\n  private static modalHtmlTemplate = `<div data-mds-dtp data-mds-dtp-guid=\"{{guid}}\" class=\"modal fade mds-bs-persian-datetime-picker-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n<div class=\"modal-dialog\">\r\n<div class=\"modal-content\">\r\n<div class=\"modal-header\" data-mds-dtp-title=\"true\">\r\n<h5 class=\"modal-title\">Modal title</h5>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"select-year-box w-0\" data-mds-dtp-year-list-box=\"true\"></div>\r\n  <div data-name=\"mds-dtp-body\"></div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>`;\r\n  private static popoverHtmlTemplate = `<div class=\"popover mds-bs-persian-datetime-picker-popover\" role=\"tooltip\" data-mds-dtp>\r\n<div class=\"popover-arrow\"></div>\r\n<h3 class=\"popover-header text-center p-1\" data-mds-dtp-title=\"true\"></h3>\r\n<div class=\"popover-body p-0\" data-name=\"mds-dtp-body\"></div>\r\n</div>`;\r\n  private static popoverHeaderSelectYearHtmlTemplate = `<table class=\"table table-sm table-borderless text-center p-0 m-0 {{rtlCssClass}}\" dir=\"{{dirAttrValue}}\">\r\n<tr>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-sm btn-light w-100\" title=\"{{previousText}}\" data-year=\"{{latestPreviousYear}}\" data-year-range-button-change=\"-1\" {{prevYearButtonAttr}}> &lt; </button>\r\n</th>\r\n<th class=\"pt-1\">\r\n{{yearsRangeText}}\r\n</th>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-sm btn-light w-100\" title=\"{{nextText}}\" data-year=\"{{latestNextYear}}\" data-year-range-button-change=\"1\" {{nextYearButtonAttr}}> &gt; </button>\r\n</th>\r\n</tr>\r\n</table>`;\r\n  private static dateTimePickerYearsToSelectHtmlTemplate = `<table class=\"table table-sm text-center p-0 m-0\">\r\n<tbody>\r\n{{yearsBoxHtml}}\r\n<tr>\r\n<td colspan=\"100\" class=\"text-center\">\r\n<button class=\"btn btn-sm btn-light w-100\" data-mds-hide-year-list-box=\"true\">{{cancelText}}</button>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>`;\r\n\r\n  private static dateTimePickerHtmlTemplate = `<div class=\"mds-bs-dtp-container {{rtlCssClass}}\" {{inlineAttr}}>\r\n<div class=\"select-year-inline-box w-0\" data-name=\"dtp-years-container\">\r\n</div>\r\n<div class=\"select-year-box w-0\" data-mds-dtp-year-list-box=\"true\"></div>\r\n<table class=\"table table-sm text-center p-0 m-0\">\r\n<thead>\r\n<tr {{selectedDateStringAttribute}}>\r\n<th mds-dtp-inline-header colspan=\"100\">{{dtpInlineHeader}}</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n{{monthsTdHtml}}\r\n</tr>\r\n</tbody>\r\n<tfoot>\r\n<tr {{timePickerAttribute}}>\r\n<td colspan=\"100\" class=\"text-center border-0\">\r\n<input type=\"time\" value=\"{{time}}\" maxlength=\"2\" data-mds-dtp-time />\r\n</td>\r\n</tr>\r\n<tr>\r\n<td colspan=\"100\">\r\n<button type=\"button\" class=\"btn btn-light\" title=\"{{goTodayText}}\" data-mds-dtp-go-today>{{todayDateString}}</button>\r\n</td>\r\n</tr>\r\n</tfoot>\r\n</table>\r\n</div>`;\r\n\r\n  private static dateTimePickerMonthTableHtmlTemplate = `<td class=\"border-0\" style=\"{{monthTdStyle}}\" {{monthTdAttribute}} data-td-month>\r\n<table class=\"table table-sm table-striped table-borderless\">\r\n<thead>\r\n<tr {{monthNameAttribute}}>\r\n<th colspan=\"100\" class=\"border-0\">\r\n<table class=\"table table-sm table-borderless\">\r\n<thead>\r\n<tr>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-light\"> {{currentMonthInfo}} </button>\r\n</th>\r\n</tr>\r\n</thead>\r\n</table>\r\n</th>\r\n</tr>\r\n<tr {{theadSelectDateButtonTrAttribute}}>\r\n<td colspan=\"100\" class=\"border-0\">\r\n<table class=\"table table-sm table-borderless\">\r\n<tr>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{previousYearText}}\" data-change-date-button=\"true\" data-number=\"{{previousYearButtonDateNumber}}\" {{previousYearButtonDisabledAttribute}}> &lt;&lt; </button>\r\n</th>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{previousMonthText}}\" data-change-date-button=\"true\" data-number=\"{{previousMonthButtonDateNumber}}\" {{previousMonthButtonDisabledAttribute}}> &lt; </button>\r\n</th>\r\n<th style=\"width: 120px;\">\r\n<div class=\"dropdown\">\r\n<button type=\"button\" class=\"btn btn-light btn-sm dropdown-toggle w-100\" id=\"mdtp-month-selector-button-{{guid}}\"\r\ndata-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n{{selectedMonthName}}\r\n</button>\r\n<div class=\"dropdown-menu\" aria-labelledby=\"mdtp-month-selector-button-{{guid}}\">\r\n<a class=\"dropdown-item {{selectMonth1ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth1DateNumber}}\">{{monthName1}}</a>\r\n<a class=\"dropdown-item {{selectMonth2ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth2DateNumber}}\">{{monthName2}}</a>\r\n<a class=\"dropdown-item {{selectMonth3ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth3DateNumber}}\">{{monthName3}}</a>\r\n<div class=\"dropdown-divider\"></div>\r\n<a class=\"dropdown-item {{selectMonth4ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth4DateNumber}}\">{{monthName4}}</a>\r\n<a class=\"dropdown-item {{selectMonth5ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth5DateNumber}}\">{{monthName5}}</a>\r\n<a class=\"dropdown-item {{selectMonth6ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth6DateNumber}}\">{{monthName6}}</a>\r\n<div class=\"dropdown-divider\"></div>\r\n<a class=\"dropdown-item {{selectMonth7ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth7DateNumber}}\">{{monthName7}}</a>\r\n<a class=\"dropdown-item {{selectMonth8ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth8DateNumber}}\">{{monthName8}}</a>\r\n<a class=\"dropdown-item {{selectMonth9ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth9DateNumber}}\">{{monthName9}}</a>\r\n<div class=\"dropdown-divider\"></div>\r\n<a class=\"dropdown-item {{selectMonth10ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth10DateNumber}}\">{{monthName10}}</a>\r\n<a class=\"dropdown-item {{selectMonth11ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth11DateNumber}}\">{{monthName11}}</a>\r\n<a class=\"dropdown-item {{selectMonth12ButtonCssClass}}\" data-change-date-button=\"true\" data-number=\"{{dropDownMenuMonth12DateNumber}}\">{{monthName12}}</a>\r\n</div>\r\n</div>\r\n</th>\r\n<th style=\"width: 50px;\">\r\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" mds-pdtp-select-year-button {{selectYearButtonDisabledAttribute}}>{{selectedYear}}</button>\r\n</th>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{nextMonthText}}\" data-change-date-button=\"true\" data-number=\"{{nextMonthButtonDateNumber}}\" {{nextMonthButtonDisabledAttribute}}> &gt; </button>\r\n</th>\r\n<th>\r\n<button type=\"button\" class=\"btn btn-light btn-sm w-100\" title=\"{{nextYearText}}\" data-change-date-button=\"true\" data-number=\"{{nextYearButtonDateNumber}}\" {{nextYearButtonDisabledAttribute}}> &gt;&gt; </button>\r\n</th>\r\n</tr>\r\n</table>\r\n</td>\r\n</tr>\r\n</thead>\r\n<tbody class=\"days\">\r\n<tr>\r\n<td class=\"{{weekDayShortName1CssClass}}\">{{weekDayShortName1}}</td>\r\n<td>{{weekDayShortName2}}</td>\r\n<td>{{weekDayShortName3}}</td>\r\n<td>{{weekDayShortName4}}</td>\r\n<td>{{weekDayShortName5}}</td>\r\n<td>{{weekDayShortName6}}</td>\r\n<td class=\"{{weekDayShortName7CssClass}}\">{{weekDayShortName7}}</td>\r\n</tr>\r\n{{daysHtml}}\r\n</tbody>\r\n</table>\r\n</td>`;\r\n\r\n  private static previousYearTextPersian = 'سال قبل';\r\n  private static previousMonthTextPersian = 'ماه قبل';\r\n  private static previousTextPersian = 'قبلی';\r\n  private static nextYearTextPersian = 'سال بعد';\r\n  private static nextMonthTextPersian = 'ماه بعد';\r\n  private static nextTextPersian = 'بعدی';\r\n  private static todayTextPersian = 'امروز';\r\n  private static goTodayTextPersian = 'برو به امروز';\r\n  private static cancelTextPersian = 'انصراف';\r\n  private static currentYearTextPersian = 'سال جاری';\r\n  private static previousText = 'Previous';\r\n  private static previousYearText = 'Previous Year';\r\n  private static previousMonthText = 'Previous Month';\r\n  private static nextText = 'Next';\r\n  private static nextYearText = 'Next Year';\r\n  private static nextMonthText = 'Next Month';\r\n  private static todayText = 'Today';\r\n  private static goTodayText = 'Go Today';\r\n  private static cancelText = 'Cancel';\r\n  private static currentYearText = 'Current Year';\r\n  private static shortDayNamesPersian = [\r\n    'ش',\r\n    'ی',\r\n    'د',\r\n    'س',\r\n    'چ',\r\n    'پ',\r\n    'ج',\r\n  ];\r\n  private static shortDayNames = [\r\n    'Su',\r\n    'Mo',\r\n    'Tu',\r\n    'We',\r\n    'Th',\r\n    'Fr',\r\n    'Sa',\r\n  ];\r\n  private static monthNamesPersian = [\r\n    'فروردین',\r\n    'اردیبهشت',\r\n    'خرداد',\r\n    'تیر',\r\n    'مرداد',\r\n    'شهریور',\r\n    'مهر',\r\n    'آبان',\r\n    'آذر',\r\n    'دی',\r\n    'بهمن',\r\n    'اسفند'\r\n  ];\r\n  private static monthNames = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ];\r\n  private static weekDayNames = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ];\r\n  private static weekDayNamesPersian = [\r\n    'یک شنبه',\r\n    'دوشنبه',\r\n    'سه شنبه',\r\n    'چهارشنبه',\r\n    'پنج شنبه',\r\n    'جمعه',\r\n    'شنبه'\r\n  ];\r\n\r\n  // #endregion\r\n\r\n  // #region Properties\r\n\r\n  guid: string = '';\r\n  setting: MdsPersianDateTimePickerSetting;\r\n  private bsPopover: Popover | null = null;\r\n  private bsModal: Modal | null = null;\r\n  private element: Element;\r\n  private tempTitleString = '';\r\n\r\n  // #endregion\r\n\r\n  // #region Methods\r\n\r\n  private initializeBsPopover(setting: MdsPersianDateTimePickerSetting): void {\r\n\r\n    // Validation\r\n\r\n    if (setting.rangeSelector && (setting.toDate || setting.fromDate)) throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' or 'fromDate' and 'rangeSelector' together`);\r\n    if (setting.toDate && setting.fromDate) throw new Error(`MdsPersianDateTimePicker => You can not set true 'toDate' and 'fromDate' together`);\r\n    if (!setting.groupId && (setting.toDate || setting.fromDate)) throw new Error(`MdsPersianDateTimePicker => When you set 'toDate' or 'fromDate' true, you have to set 'groupId'`);\r\n\r\n    // ---------------------\r\n\r\n    // آپشن هایی که باید همان لحظه تغییر اعمال شوند\r\n\r\n    if (setting.disabled) {\r\n      this.element.setAttribute(\"disabled\", '');\r\n    } else {\r\n      this.element.removeAttribute(\"disabled\");\r\n    }\r\n    if (setting.toDate || setting.fromDate) {\r\n      setting.rangeSelector = false;\r\n      this.element.setAttribute(\"data-mds-dtp-group\", setting.groupId);\r\n      if (setting.toDate)\r\n        this.element.setAttribute(\"data-to-date\", 'true');\r\n      else if (setting.fromDate)\r\n        this.element.setAttribute(\"data-from-date\", 'true');\r\n    }\r\n    if (!setting.rangeSelector) {\r\n      setting.rangeSelectorMonthsToShow = [0, 0];\r\n    }\r\n\r\n    // ---------------------\r\n\r\n    setTimeout(() => {\r\n      this.dispose();\r\n      const title = this.getPopoverHeaderTitle(setting);\r\n      let datePickerBodyHtml = this.getDateTimePickerBodyHtml(setting);\r\n      let tempDiv = document.createElement('div');\r\n      tempDiv.innerHTML = datePickerBodyHtml;\r\n      const dropDowns = tempDiv.querySelectorAll('.dropdown>button');\r\n      dropDowns.forEach(e => {\r\n        if (setting.disabled) {\r\n          e.setAttribute('disabled', '');\r\n          e.classList.add('disabled');\r\n        }\r\n        else {\r\n          e.removeAttribute('disabled');\r\n          e.classList.remove('disabled');\r\n        }\r\n      });\r\n      datePickerBodyHtml = tempDiv.innerHTML;\r\n      if (setting.modalMode == true) {\r\n        this.setModalHtml(title, datePickerBodyHtml, setting);\r\n        this.bsPopover = null;\r\n        setTimeout(() => {\r\n          const el = this.getModal();\r\n          if (el != null) {\r\n            this.bsModal = new Modal(el);\r\n            this.enableMainEvents();\r\n          }\r\n        }, 200);\r\n      } else if (setting.inLine == true) {\r\n        this.bsPopover = null;\r\n        this.element.innerHTML = datePickerBodyHtml;\r\n        this.enableInLineEvents();\r\n      } else {\r\n        this.bsPopover = new Popover(this.element, {\r\n          container: 'body',\r\n          content: datePickerBodyHtml,\r\n          title: title,\r\n          html: true,\r\n          placement: setting.placement,\r\n          trigger: 'manual',\r\n          template: MdsPersianDateTimePicker.popoverHtmlTemplate,\r\n          sanitize: false,\r\n        });\r\n        this.enableMainEvents();\r\n      }\r\n      this.tempTitleString = title;\r\n    }, setting.inLine ? 10 : 500);\r\n  }\r\n  private static newGuid(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n      let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n  private static extend(...args: any[]): any {\r\n    for (let i = 1; i < args.length; i++)\r\n      for (let key in args[i])\r\n        if (args[i].hasOwnProperty(key))\r\n          args[0][key] = args[i][key];\r\n    return args[0];\r\n  }\r\n  private static getClonedDate(dateTime: Date): Date {\r\n    return new Date(dateTime.getTime());\r\n  }\r\n  private static getDateTimeJson1(dateTime: Date): GetDateTimeJson1 {\r\n    return {\r\n      year: dateTime.getFullYear(),\r\n      month: dateTime.getMonth() + 1,\r\n      day: dateTime.getDate(),\r\n      hour: dateTime.getHours(),\r\n      minute: dateTime.getMinutes(),\r\n      second: dateTime.getSeconds(),\r\n      millisecond: dateTime.getMilliseconds(),\r\n      dayOfWeek: dateTime.getDay()\r\n    };\r\n  }\r\n  private static getDateTimeJson2(dateNumber: number): GetDateTimeJson1 {\r\n    return {\r\n      year: Math.floor(dateNumber / 10000),\r\n      month: Math.floor(dateNumber / 100) % 100,\r\n      day: dateNumber % 100,\r\n      hour: 0,\r\n      minute: 0,\r\n      second: 0,\r\n      millisecond: 0,\r\n      dayOfWeek: -1\r\n    };\r\n  }\r\n  private static getDateTimeJsonPersian1(dateTime: Date): GetDateTimeJson1 {\r\n    let persianDate = this.toJalali(dateTime.getFullYear(), dateTime.getMonth() + 1, dateTime.getDate());\r\n    return {\r\n      year: persianDate.jy,\r\n      month: persianDate.jm,\r\n      day: persianDate.jd,\r\n      hour: dateTime.getHours(),\r\n      minute: dateTime.getMinutes(),\r\n      second: dateTime.getSeconds(),\r\n      millisecond: dateTime.getMilliseconds(),\r\n      dayOfWeek: dateTime.getDay(),\r\n    };\r\n  }\r\n  private static getDateTimeJsonPersian2(yearPersian: number, monthPersian: number, dayPersian: number, hour: number, minute: number, second: number): GetDateTimeJson1 {\r\n    if (!this.isNumber(hour)) hour = 0;\r\n    if (!this.isNumber(minute)) minute = 0;\r\n    if (!this.isNumber(second)) second = 0;\r\n    let gregorian = this.toGregorian(yearPersian, monthPersian, dayPersian);\r\n    return MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, hour, minute, second));\r\n  }\r\n  private static getWeekDayName(englishWeekDayIndex: number, isGregorian: boolean): string {\r\n    if (!isGregorian) return this.weekDayNamesPersian[englishWeekDayIndex];\r\n    return this.weekDayNames[englishWeekDayIndex];\r\n  }\r\n  private static getMonthName(monthIndex: number, isGregorian: boolean): string {\r\n    if (monthIndex < 0)\r\n      monthIndex = 11;\r\n    else if (monthIndex > 11)\r\n      monthIndex = 0;\r\n    if (!isGregorian) return this.monthNamesPersian[monthIndex];\r\n    return this.monthNames[monthIndex];\r\n  }\r\n  private static getWeekDayShortName(englishWeekDayIndex: number, isGregorian: boolean): string {\r\n    if (!isGregorian)\r\n      return this.shortDayNamesPersian[englishWeekDayIndex];\r\n    return this.shortDayNames[englishWeekDayIndex];\r\n  }\r\n  private static isLeapYear(persianYear: number): boolean {\r\n    return this.isLeapJalaliYear(persianYear);\r\n  }\r\n  private static getDaysInMonthPersian(year: number, month: number): number {\r\n    let numberOfDaysInMonth = 31;\r\n    if (month > 6 && month < 12)\r\n      numberOfDaysInMonth = 30;\r\n    else if (month == 12)\r\n      numberOfDaysInMonth = this.isLeapYear(year) ? 30 : 29;\r\n    return numberOfDaysInMonth;\r\n  }\r\n  private static getDaysInMonth(year: number, month: number): number {\r\n    return new Date(year, month + 1, 0).getDate();\r\n  }\r\n  private static getLastDayDateOfPreviousMonth(dateTime: Date, isGregorian: boolean): Date {\r\n    let dateTimeLocal = MdsPersianDateTimePicker.getClonedDate(dateTime);\r\n    if (isGregorian) {\r\n      let previousMonth = new Date(dateTimeLocal.getFullYear(), dateTimeLocal.getMonth() - 1, 1),\r\n        daysInMonth = MdsPersianDateTimePicker.getDaysInMonth(previousMonth.getFullYear(), previousMonth.getMonth());\r\n      return new Date(previousMonth.getFullYear(), previousMonth.getMonth(), daysInMonth);\r\n    }\r\n    let dateTimeJsonPersian = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTimeLocal);\r\n    dateTimeJsonPersian.month += -1;\r\n    if (dateTimeJsonPersian.month <= 0) {\r\n      dateTimeJsonPersian.month = 12;\r\n      dateTimeJsonPersian.year--;\r\n    } else if (dateTimeJsonPersian.month > 12) {\r\n      dateTimeJsonPersian.year++;\r\n      dateTimeJsonPersian.month = 1;\r\n    }\r\n    return MdsPersianDateTimePicker.getDateTime1(dateTimeJsonPersian.year, dateTimeJsonPersian.month, MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeJsonPersian.year, dateTimeJsonPersian.month));\r\n  }\r\n  private static getFirstDayDateOfNextMonth(dateTime: Date, isGregorian: boolean): Date {\r\n    let dateTimeLocal = MdsPersianDateTimePicker.getClonedDate(dateTime);\r\n    if (isGregorian) {\r\n      let nextMonth = new Date(dateTimeLocal.getFullYear(), dateTimeLocal.getMonth() + 1, 1);\r\n      return new Date(nextMonth.getFullYear(), nextMonth.getMonth(), 1);\r\n    }\r\n    let dateTimeJsonPersian = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTimeLocal);\r\n    dateTimeJsonPersian.month += 1;\r\n    if (dateTimeJsonPersian.month <= 0) {\r\n      dateTimeJsonPersian.month = 12;\r\n      dateTimeJsonPersian.year--;\r\n    }\r\n    if (dateTimeJsonPersian.month > 12) {\r\n      dateTimeJsonPersian.year++;\r\n      dateTimeJsonPersian.month = 1;\r\n    }\r\n    return MdsPersianDateTimePicker.getDateTime1(dateTimeJsonPersian.year, dateTimeJsonPersian.month, 1);\r\n  }\r\n  private static getDateTime1(yearPersian: number, monthPersian: number, dayPersian: number, hour?: number, minute?: number, second?: number): Date {\r\n    if (!this.isNumber(hour)) hour = 0;\r\n    if (!this.isNumber(minute)) minute = 0;\r\n    if (!this.isNumber(second)) second = 0;\r\n    let gregorian = this.toGregorian(yearPersian, monthPersian, dayPersian);\r\n    return new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, hour, minute, second);\r\n  }\r\n  private static getDateTime2(dateTimeJsonPersian: GetDateTimeJson1): Date {\r\n    if (!dateTimeJsonPersian.hour) dateTimeJsonPersian.hour = 0;\r\n    if (!dateTimeJsonPersian.minute) dateTimeJsonPersian.minute = 0;\r\n    if (!dateTimeJsonPersian.second) dateTimeJsonPersian.second = 0;\r\n    let gregorian = this.toGregorian(dateTimeJsonPersian.year, dateTimeJsonPersian.month, dateTimeJsonPersian.day);\r\n    return new Date(gregorian.gy, gregorian.gm - 1, gregorian.gd, dateTimeJsonPersian.hour, dateTimeJsonPersian.minute, dateTimeJsonPersian.second);\r\n  }\r\n  private static getDateTime3(dateTimeJson: GetDateTimeJson1): Date {\r\n    return new Date(dateTimeJson.year, dateTimeJson.month - 1, dateTimeJson.day, dateTimeJson.hour, dateTimeJson.minute, dateTimeJson.second);\r\n  }\r\n  private static getDateTime4(dateNumber: number, dateTime: Date, isGregorian: boolean): Date {\r\n    let dateTimeJson = MdsPersianDateTimePicker.getDateTimeJson2(dateNumber);\r\n    if (!isGregorian) {\r\n      let dateTimeJsonPersian = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTime);\r\n      dateTimeJsonPersian.year = dateTimeJson.year;\r\n      dateTimeJsonPersian.month = dateTimeJson.month;\r\n      dateTimeJsonPersian.day = dateTimeJson.day;\r\n      dateTime = this.getDateTime2(dateTimeJsonPersian);\r\n    } else\r\n      dateTime = new Date(dateTimeJson.year, dateTimeJson.month - 1, dateTimeJson.day,\r\n        dateTime.getHours(), dateTime.getMinutes(), dateTime.getSeconds());\r\n    return dateTime;\r\n  }\r\n  private static getLesserDisableBeforeDate(setting: MdsPersianDateTimePickerSetting): GetDateTimeJson1 | null {\r\n    // دریافت تاریخ کوچکتر\r\n    // از بین تاریخ های غیر فعال شده در گذشته\r\n    let resultDate: Date | null = null;\r\n    const dateNow = new Date();\r\n    if (setting.disableBeforeToday && setting.disableBeforeDate) {\r\n      if (setting.disableBeforeDate.getTime() <= dateNow.getTime())\r\n        resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableBeforeDate);\r\n      else\r\n        resultDate = dateNow;\r\n    } else if (setting.disableBeforeDate)\r\n      resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableBeforeDate);\r\n    else if (setting.disableBeforeToday)\r\n      resultDate = dateNow;\r\n    if (resultDate == null)\r\n      return null;\r\n    if (setting.isGregorian)\r\n      return MdsPersianDateTimePicker.getDateTimeJson1(resultDate);\r\n    return MdsPersianDateTimePicker.getDateTimeJsonPersian1(resultDate);\r\n  }\r\n  private static getBiggerDisableAfterDate(setting: MdsPersianDateTimePickerSetting): GetDateTimeJson1 | null {\r\n    // دریافت تاریخ بزرگتر\r\n    // از بین تاریخ های غیر فعال شده در آینده\r\n    let resultDate: Date | null = null;\r\n    const dateNow = new Date();\r\n    if (setting.disableAfterDate && setting.disableAfterToday) {\r\n      if (setting.disableAfterDate.getTime() >= dateNow.getTime())\r\n        resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableAfterDate);\r\n      else\r\n        resultDate = dateNow;\r\n    } else if (setting.disableAfterDate)\r\n      resultDate = MdsPersianDateTimePicker.getClonedDate(setting.disableAfterDate);\r\n    else if (setting.disableAfterToday)\r\n      resultDate = dateNow;\r\n    if (resultDate == null)\r\n      return null;\r\n    if (setting.isGregorian)\r\n      return MdsPersianDateTimePicker.getDateTimeJson1(resultDate);\r\n    return MdsPersianDateTimePicker.getDateTimeJsonPersian1(resultDate);\r\n  }\r\n  private static addMonthToDateTimeJson(dateTimeJson: GetDateTimeJson1, addedMonth: number, isGregorian: boolean): GetDateTimeJson1 {\r\n    // وقتی نیاز هست تا ماه یا روز به تاریخی اضافه کنم\r\n    // پس از اضافه کردن ماه یا روز این متد را استفاده میکنم تا سال و ماه\r\n    // با مقادیر جدید تصحیح و برگشت داده شوند\r\n    const dateTimeJson1 = Object.assign({}, dateTimeJson);\r\n    dateTimeJson1.day = 1;\r\n    dateTimeJson1.month += addedMonth;\r\n    if (!isGregorian) {\r\n      if (dateTimeJson1.month <= 0) {\r\n        dateTimeJson1.month = 12;\r\n        dateTimeJson1.year--;\r\n      }\r\n      if (dateTimeJson1.month > 12) {\r\n        dateTimeJson1.year++;\r\n        dateTimeJson1.month = 1;\r\n      }\r\n      return dateTimeJson1;\r\n    }\r\n    return MdsPersianDateTimePicker.getDateTimeJson1(this.getDateTime3(dateTimeJson1));\r\n  }\r\n  private static convertToNumber1(dateTimeJson: GetDateTimeJson1): number {\r\n    return Number(MdsPersianDateTimePicker.zeroPad(dateTimeJson.year) + MdsPersianDateTimePicker.zeroPad(dateTimeJson.month) + MdsPersianDateTimePicker.zeroPad(dateTimeJson.day));\r\n  }\r\n  private static convertToNumber2(year: number, month: number, day: number): number {\r\n    return Number(MdsPersianDateTimePicker.zeroPad(year) + MdsPersianDateTimePicker.zeroPad(month) + MdsPersianDateTimePicker.zeroPad(day));\r\n  }\r\n  private static convertToNumber3(dateTime: Date): number {\r\n    return MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(dateTime));\r\n  }\r\n  // private static convertToNumber4(dateTime: Date): number {\r\n  //   return Number(MdsPersianDateTimePicker.zeroPad(dateTime.getFullYear()) + MdsPersianDateTimePicker.zeroPad(dateTime.getMonth()) + MdsPersianDateTimePicker.zeroPad(dateTime.getDate()));\r\n  // }\r\n  private static correctOptionValue(optionName: string, value: any): any {\r\n    const setting = new MdsPersianDateTimePickerSetting();\r\n    Object.keys(setting).filter(key => key === optionName).forEach(key => {\r\n      switch (typeof (<any>setting)[key]) {\r\n        case 'number':\r\n          value = +value;\r\n          break;\r\n        case 'string':\r\n          value = value.toString();\r\n          break;\r\n        case 'boolean':\r\n          value = !!value;\r\n          break;\r\n        case 'object':\r\n          if ((<any>setting)[key] instanceof Date) {\r\n            value = new Date(value);\r\n          } else if (Array.isArray((<any>setting)[key])) {\r\n            switch (optionName) {\r\n              case 'holidays':\r\n              case 'disabledDates':\r\n              case 'specialDates':\r\n              case 'selectedRangeDate':\r\n                value.forEach((item: any, i: number) => {\r\n                  value[i] = new Date(item);\r\n                });\r\n                break;\r\n              case 'disabledDays':\r\n              case 'rangeSelectorMonthsToShow':\r\n                value.forEach((item: any, i: number) => {\r\n                  value[i] = +item;\r\n                });\r\n                break;\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    });\r\n    return value;\r\n  }\r\n  private static getShortHour(hour: number): number {\r\n    let shortHour;\r\n    if (hour > 12)\r\n      shortHour = hour - 12;\r\n    else\r\n      shortHour = hour;\r\n    return shortHour;\r\n  }\r\n  private static getAmPm(hour: number, isGregorian: boolean): string {\r\n    let amPm;\r\n    if (hour > 12) {\r\n      if (isGregorian)\r\n        amPm = 'PM';\r\n      else\r\n        amPm = 'ب.ظ';\r\n    } else\r\n      if (isGregorian)\r\n        amPm = 'AM';\r\n      else\r\n        amPm = 'ق.ظ';\r\n    return amPm;\r\n  }\r\n  private static addMonthToDateTime(dateTime: Date, addedMonth: number, isGregorian: boolean): Date {\r\n    let dateTimeJson: GetDateTimeJson1;\r\n    if (!isGregorian) {\r\n      dateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(dateTime);\r\n      dateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeJson, addedMonth, isGregorian);\r\n      return this.getDateTime2(dateTimeJson);\r\n    }\r\n    dateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(dateTime);\r\n    dateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeJson, addedMonth, isGregorian);\r\n    return this.getDateTime3(dateTimeJson);\r\n  }\r\n  private static isNumber(n: any): boolean {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n  private static toPersianNumber(inputNumber1: number | string): string {\r\n    /* ۰ ۱ ۲ ۳ ۴ ۵ ۶ ۷ ۸ ۹ */\r\n    if (!inputNumber1) return '';\r\n    let str1 = inputNumber1.toString().trim();\r\n    if (!str1) return '';\r\n    str1 = str1.replace(/0/img, '۰');\r\n    str1 = str1.replace(/1/img, '۱');\r\n    str1 = str1.replace(/2/img, '۲');\r\n    str1 = str1.replace(/3/img, '۳');\r\n    str1 = str1.replace(/4/img, '۴');\r\n    str1 = str1.replace(/5/img, '۵');\r\n    str1 = str1.replace(/6/img, '۶');\r\n    str1 = str1.replace(/7/img, '۷');\r\n    str1 = str1.replace(/8/img, '۸');\r\n    str1 = str1.replace(/9/img, '۹');\r\n    return str1;\r\n  }\r\n  private static toEnglishNumber(inputNumber1: number | string): string {\r\n    /* ۰ ۱ ۲ ۳ ۴ ۵ ۶ ۷ ۸ ۹ */\r\n    if (!inputNumber1) return '';\r\n    let str1 = inputNumber1.toString().trim();\r\n    if (!str1) return '';\r\n    str1 = str1.replace(/۰/img, '0');\r\n    str1 = str1.replace(/۱/img, '1');\r\n    str1 = str1.replace(/۲/img, '2');\r\n    str1 = str1.replace(/۳/img, '3');\r\n    str1 = str1.replace(/۴/img, '4');\r\n    str1 = str1.replace(/۵/img, '5');\r\n    str1 = str1.replace(/۶/img, '6');\r\n    str1 = str1.replace(/۷/img, '7');\r\n    str1 = str1.replace(/۸/img, '8');\r\n    str1 = str1.replace(/۹/img, '9');\r\n    return str1;\r\n  }\r\n  private static zeroPad(nr: any, base?: string): string {\r\n    if (nr == undefined || nr == '') return '00';\r\n    if (base == undefined || base == '') base = '00';\r\n    let len = (String(base).length - String(nr).length) + 1;\r\n    return len > 0 ? new Array(len).join('0') + nr : nr;\r\n  }\r\n  private static getDateTimeString(dateTimeJson: GetDateTimeJson1, format: string, isGregorian: boolean, persianNumber: boolean): string {\r\n\r\n    /// فرمت های که پشتیبانی می شوند\r\n    /// <para />\r\n    /// yyyy: سال چهار رقمی\r\n    /// <para />\r\n    /// yy: سال دو رقمی\r\n    /// <para />\r\n    /// MMMM: نام ماه\r\n    /// <para />\r\n    /// MM: عدد دو رقمی ماه\r\n    /// <para />\r\n    /// M: عدد یک رقمی ماه\r\n    /// <para />\r\n    /// dddd: نام روز هفته\r\n    /// <para />\r\n    /// dd: عدد دو رقمی روز ماه\r\n    /// <para />\r\n    /// d: عدد یک رقمی روز ماه\r\n    /// <para />\r\n    /// HH: ساعت دو رقمی با فرمت 00 تا 24\r\n    /// <para />\r\n    /// H: ساعت یک رقمی با فرمت 0 تا 24\r\n    /// <para />\r\n    /// hh: ساعت دو رقمی با فرمت 00 تا 12\r\n    /// <para />\r\n    /// h: ساعت یک رقمی با فرمت 0 تا 12\r\n    /// <para />\r\n    /// mm: عدد دو رقمی دقیقه\r\n    /// <para />\r\n    /// m: عدد یک رقمی دقیقه\r\n    /// <para />\r\n    /// ss: ثانیه دو رقمی\r\n    /// <para />\r\n    /// s: ثانیه یک رقمی\r\n    /// <para />\r\n    /// fff: میلی ثانیه 3 رقمی\r\n    /// <para />\r\n    /// ff: میلی ثانیه 2 رقمی\r\n    /// <para />\r\n    /// f: میلی ثانیه یک رقمی\r\n    /// <para />\r\n    /// tt: ب.ظ یا ق.ظ\r\n    /// <para />\r\n    /// t: حرف اول از ب.ظ یا ق.ظ\r\n\r\n    format = format.replace(/yyyy/mg, dateTimeJson.year.toString());\r\n    format = format.replace(/yy/mg, (dateTimeJson.year % 100).toString());\r\n    format = format.replace(/MMMM/mg, MdsPersianDateTimePicker.getMonthName(dateTimeJson.month - 1, isGregorian));\r\n    format = format.replace(/MM/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.month));\r\n    format = format.replace(/M/mg, dateTimeJson.month.toString());\r\n    format = format.replace(/dddd/mg, MdsPersianDateTimePicker.getWeekDayName(dateTimeJson.dayOfWeek, isGregorian));\r\n    format = format.replace(/dd/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.day));\r\n    format = format.replace(/d/mg, dateTimeJson.day.toString());\r\n    format = format.replace(/HH/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.hour));\r\n    format = format.replace(/H/mg, dateTimeJson.hour.toString());\r\n    format = format.replace(/hh/mg, MdsPersianDateTimePicker.zeroPad(this.getShortHour(dateTimeJson.hour).toString()));\r\n    format = format.replace(/h/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.hour));\r\n    format = format.replace(/mm/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.minute));\r\n    format = format.replace(/m/mg, dateTimeJson.minute.toString());\r\n    format = format.replace(/ss/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.second));\r\n    format = format.replace(/s/mg, dateTimeJson.second.toString());\r\n    format = format.replace(/fff/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.millisecond, '000'));\r\n    format = format.replace(/ff/mg, MdsPersianDateTimePicker.zeroPad(dateTimeJson.millisecond / 10));\r\n    format = format.replace(/f/mg, (dateTimeJson.millisecond / 100).toString());\r\n    format = format.replace(/tt/mg, this.getAmPm(dateTimeJson.hour, isGregorian));\r\n    format = format.replace(/t/mg, this.getAmPm(dateTimeJson.hour, isGregorian)[0]);\r\n\r\n    if (persianNumber)\r\n      format = MdsPersianDateTimePicker.toPersianNumber(format);\r\n    return format;\r\n  }\r\n  private static getSelectedDateTimeTextFormatted(setting: MdsPersianDateTimePickerSetting): string {\r\n    if (setting.selectedDate == undefined) return '';\r\n    if (!setting.enableTimePicker) {\r\n      setting.selectedDate.setHours(0);\r\n      setting.selectedDate.setMinutes(0);\r\n      setting.selectedDate.setSeconds(0);\r\n    }\r\n    if (setting.rangeSelector && setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined)\r\n      return MdsPersianDateTimePicker.getDateTimeString(!setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.rangeSelectorStartDate) : MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorStartDate), setting.textFormat, setting.isGregorian, setting.persianNumber) + ' - ' +\r\n        MdsPersianDateTimePicker.getDateTimeString(!setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.rangeSelectorEndDate) : MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorEndDate), setting.textFormat, setting.isGregorian, setting.persianNumber);\r\n    return MdsPersianDateTimePicker.getDateTimeString(!setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.selectedDate) : MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDate), setting.textFormat, setting.isGregorian, setting.persianNumber);\r\n  }\r\n  private static getSelectedDateFormatted(setting: MdsPersianDateTimePickerSetting): string {\r\n    // دریافت رشته تاریخ انتخاب شده\r\n    if ((!setting.rangeSelector && !setting.selectedDate) ||\r\n      (setting.rangeSelector && !setting.rangeSelectorStartDate && !setting.rangeSelectorEndDate))\r\n      return '';\r\n    if (setting.rangeSelector)\r\n      return MdsPersianDateTimePicker.getDateTimeString(MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorStartDate!), setting.dateFormat, true, setting.persianNumber) + ' - ' +\r\n        MdsPersianDateTimePicker.getDateTimeString(MdsPersianDateTimePicker.getDateTimeJson1(setting.rangeSelectorEndDate!), setting.dateFormat, true, setting.persianNumber);\r\n    return MdsPersianDateTimePicker.getDateTimeString(MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDate!), setting.dateFormat, true, setting.persianNumber);\r\n  }\r\n  private static getDisabledDateObject(setting: MdsPersianDateTimePickerSetting): [GetDateTimeJson1 | null, GetDateTimeJson1 | null] {\r\n    let disableBeforeDateTimeJson = this.getLesserDisableBeforeDate(setting);\r\n    let disableAfterDateTimeJson = this.getBiggerDisableAfterDate(setting);\r\n    // بررسی پراپرتی های از تاریخ، تا تاریخ\r\n    if ((setting.fromDate || setting.toDate) && setting.groupId) {\r\n      const toDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-to-date]`);\r\n      const fromDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-from-date]`);\r\n      if (toDateElement != null && setting.fromDate) {\r\n        const toDateSetting = MdsPersianDateTimePicker.getInstance(toDateElement)?.setting;\r\n        const toDateSelectedDate = !toDateSetting ? null : toDateSetting.selectedDate;\r\n        disableAfterDateTimeJson = !toDateSelectedDate ? null : setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJson1(toDateSelectedDate) : MdsPersianDateTimePicker.getDateTimeJsonPersian1(toDateSelectedDate);\r\n      } else if (fromDateElement != null && setting.toDate) {\r\n        const fromDateSetting = MdsPersianDateTimePicker.getInstance(fromDateElement)?.setting;\r\n        const fromDateSelectedDate = !fromDateSetting ? null : fromDateSetting.selectedDate;\r\n        disableBeforeDateTimeJson = !fromDateSelectedDate ? null : setting.isGregorian ? MdsPersianDateTimePicker.getDateTimeJson1(fromDateSelectedDate) : MdsPersianDateTimePicker.getDateTimeJsonPersian1(fromDateSelectedDate);\r\n      }\r\n    }\r\n    return [disableBeforeDateTimeJson, disableAfterDateTimeJson];\r\n  }\r\n  private static setSelectedData(setting: MdsPersianDateTimePickerSetting): void {\r\n    const targetTextElement = setting.targetTextSelector ? document.querySelector(setting.targetTextSelector) : undefined;\r\n    const targetDateElement = setting.targetDateSelector ? document.querySelector(setting.targetDateSelector) : undefined;\r\n    const changeEvent = new Event('change');\r\n    if (targetTextElement != undefined) {\r\n      const dateTimeTextFormat = this.getSelectedDateTimeTextFormatted(setting);\r\n      switch (targetTextElement.tagName.toLowerCase()) {\r\n        case 'input':\r\n          (<any>targetTextElement).value = dateTimeTextFormat;\r\n          break;\r\n        default:\r\n          targetTextElement.innerHTML = dateTimeTextFormat;\r\n          break;\r\n      }\r\n      targetTextElement.dispatchEvent(changeEvent);\r\n    }\r\n    if (targetDateElement != undefined) {\r\n      const dateTimeFormat = this.toEnglishNumber(this.getSelectedDateFormatted(setting));\r\n      switch (targetDateElement.tagName.toLowerCase()) {\r\n        case 'input':\r\n          (<any>targetDateElement).value = dateTimeFormat;\r\n          break;\r\n        default:\r\n          targetDateElement.innerHTML = dateTimeFormat;\r\n          break;\r\n      }\r\n      targetDateElement.dispatchEvent(changeEvent);\r\n    }\r\n  }\r\n  private getPopover(element: Element): Element | null {\r\n    let popoverId = element.getAttribute('aria-describedby');\r\n    if (popoverId == undefined || popoverId == '')\r\n      return element.closest('[data-mds-dtp]');\r\n    return document.getElementById(popoverId.toString());\r\n  }\r\n  private getModal(): Element | null {\r\n    return document.querySelector(`.modal[data-mds-dtp-guid=\"${this.guid}\"]`);\r\n  }\r\n  private setModalHtml(title: string, datePickerBodyHtml: string, setting: MdsPersianDateTimePickerSetting): void {\r\n    const prevModalElement = this.getModal();\r\n    if (prevModalElement == null) {\r\n      let modalHtml = MdsPersianDateTimePicker.modalHtmlTemplate;\r\n      modalHtml = modalHtml.replace(/\\{\\{guid\\}\\}/img, this.guid);\r\n      const tempDiv = document.createElement('div');\r\n      tempDiv.innerHTML = modalHtml;\r\n      tempDiv.querySelector('[data-mds-dtp-title] .modal-title')!.innerHTML = title;\r\n      tempDiv.querySelector('[data-name=\"mds-dtp-body\"]')!.innerHTML = datePickerBodyHtml;\r\n      document.querySelector('body')!.appendChild(tempDiv);\r\n    } else {\r\n      prevModalElement.querySelector('[data-mds-dtp-title] .modal-title')!.innerHTML = title;\r\n      prevModalElement.querySelector('[data-name=\"mds-dtp-body\"]')!.innerHTML = datePickerBodyHtml;\r\n    }\r\n    const modalDialogElement = document.querySelector(`[data-mds-dtp-guid=\"${this.guid}\"] .modal-dialog`);\r\n    if (modalDialogElement != null) {\r\n      if (setting.rangeSelector) {\r\n        if (setting.rangeSelectorMonthsToShow[0] > 0 || setting.rangeSelectorMonthsToShow[1] > 0)\r\n          modalDialogElement.classList.add('modal-xl');\r\n        else\r\n          modalDialogElement.classList.remove('modal-xl');\r\n      } else {\r\n        modalDialogElement.classList.remove('modal-xl');\r\n      }\r\n    } else {\r\n      console.warn(\"mds.bs.datetimepicker: element with `data-mds-dtp-guid` selector not found !\")\r\n    }\r\n  }\r\n  private getYearsBoxBodyHtml(setting: MdsPersianDateTimePickerSetting, yearToStart: number): MdsPersianDateTimePickerYearToSelect {\r\n    // بدست آوردن اچ تی ام ال انتخاب سال\r\n    // yearToStart سال شروع\r\n\r\n    setting.yearOffset = Number(setting.yearOffset);\r\n\r\n    const selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\r\n    const disabledDateObj = MdsPersianDateTimePicker.getDisabledDateObject(setting);\r\n    const disableBeforeDateTimeJson = disabledDateObj[0];\r\n    const disableAfterDateTimeJson = disabledDateObj[1];\r\n    let html = MdsPersianDateTimePicker.dateTimePickerYearsToSelectHtmlTemplate;\r\n    let yearsBoxHtml = '';\r\n    let todayDateTimeJson: GetDateTimeJson1;\r\n    let selectedDateTimeToShowJson: GetDateTimeJson1;\r\n    let counter = 1;\r\n\r\n    if (setting.isGregorian) {\r\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShow);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(new Date());\r\n    } else {\r\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateToShow);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date());\r\n    }\r\n    counter = 1;\r\n    const yearStart = yearToStart ? yearToStart : todayDateTimeJson.year - setting.yearOffset;\r\n    const yearEnd = yearToStart ? yearToStart + setting.yearOffset * 2 : todayDateTimeJson.year + setting.yearOffset;\r\n    for (let i = yearStart; i < yearEnd; i++) {\r\n      let disabledAttr = '';\r\n      if (disableBeforeDateTimeJson != null) {\r\n        disabledAttr = i < disableBeforeDateTimeJson.year ? 'disabled' : '';\r\n      }\r\n      if (!disabledAttr && disableAfterDateTimeJson != null) {\r\n        disabledAttr = i > disableAfterDateTimeJson.year ? 'disabled' : '';\r\n      }\r\n      let currentYearDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson2(MdsPersianDateTimePicker.convertToNumber2(i, selectedDateTimeToShowJson.month, MdsPersianDateTimePicker.getDaysInMonthPersian(i, selectedDateTimeToShowJson.month)));\r\n      let currentYearDisabledAttr = '';\r\n      let yearText = setting.isGregorian ? i.toString() : MdsPersianDateTimePicker.toPersianNumber(i);\r\n      let yearDateNumber = MdsPersianDateTimePicker.convertToNumber2(i, selectedDateTimeToShowJson.month, 1);\r\n      let todayAttr = todayDateTimeJson.year == i ? 'data-current-year=\"true\"' : ''\r\n      let selectedYearAttr = selectedDateTimeToShowJson.year == i ? 'data-selected-year' : ''\r\n      let selectedYearTitle = '';\r\n      if (todayAttr)\r\n        selectedYearTitle = setting.isGregorian ? MdsPersianDateTimePicker.currentYearText : MdsPersianDateTimePicker.currentYearTextPersian;\r\n      if (disableBeforeDateTimeJson != undefined && disableBeforeDateTimeJson.year != undefined && currentYearDateTimeJson.year < disableBeforeDateTimeJson.year)\r\n        currentYearDisabledAttr = 'disabled';\r\n      if (disableAfterDateTimeJson != undefined && disableAfterDateTimeJson.year != undefined && currentYearDateTimeJson.year > disableAfterDateTimeJson.year)\r\n        currentYearDisabledAttr = 'disabled';\r\n      if (setting.disableBeforeToday && currentYearDateTimeJson.year < todayDateTimeJson.year)\r\n        currentYearDisabledAttr = 'disabled';\r\n      if (setting.disableAfterToday && currentYearDateTimeJson.year > todayDateTimeJson.year)\r\n        currentYearDisabledAttr = 'disabled';\r\n      if (counter == 1) yearsBoxHtml += '<tr>';\r\n      yearsBoxHtml += `\r\n<td class=\"text-center\" title=\"${selectedYearTitle}\" ${todayAttr} ${selectedYearAttr}>\r\n  <button class=\"btn btn-sm btn-light w-100\" type=\"button\" data-change-date-button=\"true\" data-number=\"${yearDateNumber}\" ${currentYearDisabledAttr} ${disabledAttr}>${yearText}</button>\r\n</td>\r\n`;\r\n      if (counter == 5) yearsBoxHtml += '</tr>';\r\n      counter++;\r\n      if (counter > 5) counter = 1;\r\n    }\r\n    html = html.replace(/\\{\\{yearsBoxHtml\\}\\}/img, yearsBoxHtml);\r\n    html = html.replace(/\\{\\{cancelText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.cancelText : MdsPersianDateTimePicker.cancelTextPersian);\r\n    if (setting.inLine && setting.yearOffset > 15)\r\n      html += '<div style=\"height: 30px;\"></div>';\r\n    return {\r\n      yearStart,\r\n      yearEnd,\r\n      html\r\n    };\r\n  }\r\n  private getYearsBoxHeaderHtml(setting: MdsPersianDateTimePickerSetting, yearStart: number, yearEnd: number): string {\r\n    const yearsRangeText = ` ${yearStart} - ${yearEnd - 1} `;\r\n    const disabledDateObj = MdsPersianDateTimePicker.getDisabledDateObject(setting);\r\n    let html = MdsPersianDateTimePicker.popoverHeaderSelectYearHtmlTemplate;\r\n    html = html.replace(/\\{{rtlCssClass\\}\\}/img, setting.isGregorian ? '' : 'rtl');\r\n    html = html.replace(/\\{{dirAttrValue\\}\\}/img, setting.isGregorian ? 'ltr' : 'rtl');\r\n    html = html.replace(/\\{\\{yearsRangeText\\}\\}/img, setting.isGregorian ? yearsRangeText : MdsPersianDateTimePicker.toPersianNumber(yearsRangeText));\r\n    html = html.replace(/\\{\\{previousText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.previousText : MdsPersianDateTimePicker.previousTextPersian);\r\n    html = html.replace(/\\{\\{nextText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.nextText : MdsPersianDateTimePicker.nextTextPersian);\r\n    html = html.replace(/\\{\\{latestPreviousYear\\}\\}/img, yearStart > yearEnd ? yearEnd.toString() : yearStart.toString());\r\n    html = html.replace(/\\{\\{latestNextYear\\}\\}/img, yearStart > yearEnd ? yearStart.toString() : yearEnd.toString());\r\n    html = html.replace(/\\{\\{prevYearButtonAttr\\}\\}/img, disabledDateObj[0] != null && yearStart - 1 < disabledDateObj[0].year ? 'disabled' : '');\r\n    html = html.replace(/\\{\\{nextYearButtonAttr\\}\\}/img, disabledDateObj[1] != null && yearEnd + 1 > disabledDateObj[1].year ? 'disabled' : '');\r\n    return html;\r\n  }\r\n  private getDateTimePickerMonthHtml(setting: MdsPersianDateTimePickerSetting, isNextMonth: boolean, isPrevMonth: boolean): string {\r\n    let selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\r\n    let selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    let selectedDateTime = setting.selectedDate != undefined ? MdsPersianDateTimePicker.getClonedDate(setting.selectedDate) : undefined;\r\n    let isNextOrPrevMonth = isNextMonth || isPrevMonth;\r\n    let html = MdsPersianDateTimePicker.dateTimePickerMonthTableHtmlTemplate;\r\n\r\n    html = html.replace(/\\{\\{guid\\}\\}/img, this.guid);\r\n    html = html.replace(/\\{\\{monthTdAttribute\\}\\}/img, isNextMonth ? 'data-next-month' : isPrevMonth ? 'data-prev-month' : '');\r\n    html = html.replace(/\\{\\{monthNameAttribute\\}\\}/img, !isNextOrPrevMonth ? 'hidden' : '');\r\n    html = html.replace(/\\{\\{theadSelectDateButtonTrAttribute\\}\\}/img, !isNextOrPrevMonth ? '' : 'hidden');\r\n    html = html.replace(/\\{\\{weekDayShortName1CssClass\\}\\}/img, setting.isGregorian ? 'text-danger' : '');\r\n    html = html.replace(/\\{\\{weekDayShortName7CssClass\\}\\}/img, !setting.isGregorian ? 'text-danger' : '');\r\n    html = html.replace(/\\{\\{previousYearText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.previousYearText : MdsPersianDateTimePicker.previousYearTextPersian);\r\n    html = html.replace(/\\{\\{previousMonthText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.previousMonthText : MdsPersianDateTimePicker.previousMonthTextPersian);\r\n    html = html.replace(/\\{\\{nextMonthText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.nextMonthText : MdsPersianDateTimePicker.nextMonthTextPersian);\r\n    html = html.replace(/\\{\\{nextYearText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.nextYearText : MdsPersianDateTimePicker.nextYearTextPersian);\r\n    html = html.replace(/\\{\\{monthName1\\}\\}/img, MdsPersianDateTimePicker.getMonthName(0, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName2\\}\\}/img, MdsPersianDateTimePicker.getMonthName(1, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName3\\}\\}/img, MdsPersianDateTimePicker.getMonthName(2, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName4\\}\\}/img, MdsPersianDateTimePicker.getMonthName(3, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName5\\}\\}/img, MdsPersianDateTimePicker.getMonthName(4, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName6\\}\\}/img, MdsPersianDateTimePicker.getMonthName(5, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName7\\}\\}/img, MdsPersianDateTimePicker.getMonthName(6, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName8\\}\\}/img, MdsPersianDateTimePicker.getMonthName(7, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName9\\}\\}/img, MdsPersianDateTimePicker.getMonthName(8, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName10\\}\\}/img, MdsPersianDateTimePicker.getMonthName(9, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName11\\}\\}/img, MdsPersianDateTimePicker.getMonthName(10, setting.isGregorian));\r\n    html = html.replace(/\\{\\{monthName12\\}\\}/img, MdsPersianDateTimePicker.getMonthName(11, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName1\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(0, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName2\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(1, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName3\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(2, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName4\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(3, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName5\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(4, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName6\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(5, setting.isGregorian));\r\n    html = html.replace(/\\{\\{weekDayShortName7\\}\\}/img, MdsPersianDateTimePicker.getWeekDayShortName(6, setting.isGregorian));\r\n\r\n    const disabledDateObj = MdsPersianDateTimePicker.getDisabledDateObject(setting);\r\n    let i = 0,\r\n      j = 0,\r\n      firstWeekDayNumber,\r\n      cellNumber = 0,\r\n      tdNumber = 0,\r\n      selectedDateNumber = 0,\r\n      selectedMonthName = '',\r\n      todayDateTimeJson: GetDateTimeJson1, // year, month, day, hour, minute, second\r\n      dateTimeToShowJson: GetDateTimeJson1, // year, month, day, hour, minute, second\r\n      numberOfDaysInCurrentMonth = 0,\r\n      numberOfDaysInPreviousMonth = 0,\r\n      tr = document.createElement('TR'),\r\n      td = document.createElement(\"TD\"),\r\n      daysHtml = '',\r\n      currentDateNumber = 0,\r\n      previousMonthDateNumber = 0,\r\n      nextMonthDateNumber = 0,\r\n      previousYearDateNumber = 0,\r\n      nextYearDateNumber = 0,\r\n      rangeSelectorStartDate = !setting.rangeSelector || setting.rangeSelectorStartDate == undefined ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorStartDate),\r\n      rangeSelectorEndDate = !setting.rangeSelector || setting.rangeSelectorEndDate == undefined ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorEndDate),\r\n      rangeSelectorStartDateNumber = 0,\r\n      rangeSelectorEndDateNumber = 0,\r\n      dayNumberInString = '0',\r\n      dayOfWeek = '', // نام روز هفته\r\n      monthsDateNumberAndAttr: any = {\r\n        month1DateNumber: 0,\r\n        month2DateNumber: 0,\r\n        month3DateNumber: 0,\r\n        month4DateNumber: 0,\r\n        month5DateNumber: 0,\r\n        month6DateNumber: 0,\r\n        month7DateNumber: 0,\r\n        month8DateNumber: 0,\r\n        month9DateNumber: 0,\r\n        month10DateNumber: 0,\r\n        month11DateNumber: 0,\r\n        month12DateNumber: 0,\r\n        selectMonth1ButtonCssClass: '',\r\n        selectMonth2ButtonCssClass: '',\r\n        selectMonth3ButtonCssClass: '',\r\n        selectMonth4ButtonCssClass: '',\r\n        selectMonth5ButtonCssClass: '',\r\n        selectMonth6ButtonCssClass: '',\r\n        selectMonth7ButtonCssClass: '',\r\n        selectMonth8ButtonCssClass: '',\r\n        selectMonth9ButtonCssClass: '',\r\n        selectMonth10ButtonCssClass: '',\r\n        selectMonth11ButtonCssClass: '',\r\n        selectMonth12ButtonCssClass: '',\r\n      },\r\n      holidaysDateNumbers: number[] = [],\r\n      disabledDatesNumber: number[] = [],\r\n      specialDatesNumber: number[] = [],\r\n      disableBeforeDateTimeJson = disabledDateObj[0],\r\n      disableAfterDateTimeJson = disabledDateObj[1],\r\n      previousYearButtonDisabledAttribute = '',\r\n      previousMonthButtonDisabledAttribute = '',\r\n      selectYearButtonDisabledAttribute = '',\r\n      nextMonthButtonDisabledAttribute = '',\r\n      nextYearButtonDisabledAttribute = '',\r\n      isTrAppended = false;\r\n\r\n    if (setting.isGregorian) {\r\n      dateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShowTemp);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(new Date());\r\n      firstWeekDayNumber = new Date(dateTimeToShowJson.year, dateTimeToShowJson.month - 1, 1).getDay();\r\n      selectedDateNumber = !selectedDateTime ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(selectedDateTime));\r\n      numberOfDaysInCurrentMonth = MdsPersianDateTimePicker.getDaysInMonth(dateTimeToShowJson.year, dateTimeToShowJson.month - 1);\r\n      numberOfDaysInPreviousMonth = MdsPersianDateTimePicker.getDaysInMonth(dateTimeToShowJson.year, dateTimeToShowJson.month - 2);\r\n      previousMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(MdsPersianDateTimePicker.getLastDayDateOfPreviousMonth(selectedDateToShowTemp, true)));\r\n      nextMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(MdsPersianDateTimePicker.getFirstDayDateOfNextMonth(selectedDateToShowTemp, true)));\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      previousYearDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(new Date(selectedDateToShowTemp.setFullYear(selectedDateToShowTemp.getFullYear() - 1))));\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      nextYearDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(new Date(selectedDateToShowTemp.setFullYear(selectedDateToShowTemp.getFullYear() + 1))));\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      rangeSelectorStartDateNumber = !setting.rangeSelector || !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorStartDate);\r\n      rangeSelectorEndDateNumber = !setting.rangeSelector || !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorEndDate);\r\n      for (i = 1; i <= 12; i++) {\r\n        monthsDateNumberAndAttr['month' + i.toString() + 'DateNumber'] = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(new Date(selectedDateToShowTemp.setMonth(i - 1))));\r\n        selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      }\r\n      for (i = 0; i < setting.holidays.length; i++) {\r\n        holidaysDateNumbers.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(setting.holidays[i])));\r\n      }\r\n      for (i = 0; i < setting.disabledDates.length; i++) {\r\n        disabledDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(setting.disabledDates[i])));\r\n      }\r\n      for (i = 0; i < setting.specialDates.length; i++) {\r\n        specialDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJson1(setting.specialDates[i])));\r\n      }\r\n    } else {\r\n      dateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateToShowTemp);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date());\r\n      firstWeekDayNumber = MdsPersianDateTimePicker.getDateTimeJsonPersian2(dateTimeToShowJson.year, dateTimeToShowJson.month, 1, 0, 0, 0).dayOfWeek;\r\n      selectedDateNumber = !selectedDateTime ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateTime));\r\n      numberOfDaysInCurrentMonth = MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeToShowJson.year, dateTimeToShowJson.month);\r\n      numberOfDaysInPreviousMonth = MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeToShowJson.year - 1, dateTimeToShowJson.month - 1);\r\n      previousMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(MdsPersianDateTimePicker.getLastDayDateOfPreviousMonth(selectedDateToShowTemp, false)));\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      nextMonthDateNumber = MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(MdsPersianDateTimePicker.getFirstDayDateOfNextMonth(selectedDateToShowTemp, false)));\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      previousYearDateNumber = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year - 1, dateTimeToShowJson.month, dateTimeToShowJson.day);\r\n      nextYearDateNumber = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year + 1, dateTimeToShowJson.month, dateTimeToShowJson.day);\r\n      selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      rangeSelectorStartDateNumber = !setting.rangeSelector || !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorStartDate));\r\n      rangeSelectorEndDateNumber = !setting.rangeSelector || !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorEndDate));\r\n      for (i = 1; i <= 12; i++) {\r\n        monthsDateNumberAndAttr['month' + i.toString() + 'DateNumber'] = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year, i, MdsPersianDateTimePicker.getDaysInMonthPersian(dateTimeToShowJson.year, i));\r\n        selectedDateToShowTemp = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      }\r\n      for (i = 0; i < setting.holidays.length; i++) {\r\n        holidaysDateNumbers.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.holidays[i])));\r\n      }\r\n      for (i = 0; i < setting.disabledDates.length; i++) {\r\n        disabledDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.disabledDates[i])));\r\n      }\r\n      for (i = 0; i < setting.specialDates.length; i++) {\r\n        specialDatesNumber.push(MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.specialDates[i])));\r\n      }\r\n    }\r\n\r\n    let todayDateNumber = MdsPersianDateTimePicker.convertToNumber1(todayDateTimeJson);\r\n    let selectedYear = setting.isGregorian ? dateTimeToShowJson.year.toString() : MdsPersianDateTimePicker.toPersianNumber(dateTimeToShowJson.year);\r\n    let disableBeforeDateTimeNumber = !disableBeforeDateTimeJson ? undefined : MdsPersianDateTimePicker.convertToNumber1(disableBeforeDateTimeJson);\r\n    let disableAfterDateTimeNumber = !disableAfterDateTimeJson ? undefined : MdsPersianDateTimePicker.convertToNumber1(disableAfterDateTimeJson);\r\n    let currentMonthInfo = MdsPersianDateTimePicker.getMonthName(dateTimeToShowJson.month - 1, setting.isGregorian) + ' ' + dateTimeToShowJson.year.toString();\r\n    if (!setting.isGregorian)\r\n      currentMonthInfo = MdsPersianDateTimePicker.toPersianNumber(currentMonthInfo);\r\n    selectedMonthName = MdsPersianDateTimePicker.getMonthName(dateTimeToShowJson.month - 1, setting.isGregorian);\r\n\r\n    if (setting.yearOffset <= 0) {\r\n      previousYearButtonDisabledAttribute = 'disabled';\r\n      nextYearButtonDisabledAttribute = 'disabled';\r\n      selectYearButtonDisabledAttribute = 'disabled';\r\n    }\r\n\r\n    // روز های ماه قبل\r\n    if (!setting.isGregorian && firstWeekDayNumber != 6 || setting.isGregorian && firstWeekDayNumber != 0) {\r\n      if (setting.isGregorian)\r\n        firstWeekDayNumber--;\r\n      let previousMonthDateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeToShowJson, -1, setting.isGregorian);\r\n      for (i = numberOfDaysInPreviousMonth - firstWeekDayNumber; i <= numberOfDaysInPreviousMonth; i++) {\r\n        currentDateNumber = MdsPersianDateTimePicker.convertToNumber2(previousMonthDateTimeJson.year, previousMonthDateTimeJson.month, i);\r\n        dayNumberInString = setting.isGregorian ? MdsPersianDateTimePicker.zeroPad(i) : MdsPersianDateTimePicker.toPersianNumber(MdsPersianDateTimePicker.zeroPad(i));\r\n        td = document.createElement('TD');\r\n        td.setAttribute('data-nm', '');\r\n        td.setAttribute('data-number', currentDateNumber.toString());\r\n        td.innerHTML = dayNumberInString;\r\n        if (setting.rangeSelector) {\r\n          if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\r\n            td.classList.add('selected-range-days-start-end');\r\n          else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\r\n            td.classList.add('selected-range-days-nm');\r\n        }\r\n        // روز جمعه\r\n        if (!setting.isGregorian && tdNumber == 6)\r\n          td.classList.add('text-danger');\r\n        // روز یکشنبه\r\n        else if (setting.isGregorian && tdNumber == 0)\r\n          td.classList.add('text-danger');\r\n        tr.appendChild(td);\r\n        cellNumber++;\r\n        tdNumber++;\r\n        if (tdNumber >= 7) {\r\n          tdNumber = 0;\r\n          daysHtml += tr.outerHTML;\r\n          isTrAppended = true;\r\n          tr = document.createElement('TR');\r\n        }\r\n      }\r\n    }\r\n\r\n    // روزهای ماه جاری\r\n    for (i = 1; i <= numberOfDaysInCurrentMonth; i++) {\r\n\r\n      if (tdNumber >= 7) {\r\n        tdNumber = 0;\r\n        daysHtml += tr.outerHTML;\r\n        isTrAppended = true;\r\n        tr = document.createElement('TR');\r\n      }\r\n\r\n      // عدد روز\r\n      currentDateNumber = MdsPersianDateTimePicker.convertToNumber2(dateTimeToShowJson.year, dateTimeToShowJson.month, i);\r\n      dayNumberInString = setting.isGregorian ? MdsPersianDateTimePicker.zeroPad(i) : MdsPersianDateTimePicker.toPersianNumber(MdsPersianDateTimePicker.zeroPad(i));\r\n\r\n      td = document.createElement('TD');\r\n      td.setAttribute('data-day', '');\r\n      td.setAttribute('data-number', currentDateNumber.toString());\r\n      td.innerHTML = dayNumberInString;\r\n\r\n      // امروز\r\n      if (currentDateNumber == todayDateNumber) {\r\n        td.setAttribute('data-today', '');\r\n        td.setAttribute('title', setting.isGregorian ? MdsPersianDateTimePicker.todayText : MdsPersianDateTimePicker.todayTextPersian);\r\n        // اگر نام روز هفته انتخاب شده در تکس باکس قبل از تاریخ امروز باشد\r\n        // نباید دیگر نام روز هفته تغییر کند\r\n        if (!dayOfWeek)\r\n          dayOfWeek = MdsPersianDateTimePicker.getWeekDayName(tdNumber - 1 < 0 ? 0 : tdNumber - 1, setting.isGregorian);\r\n      }\r\n\r\n      // روز از قبل انتخاب شده\r\n      if (!setting.rangeSelector && selectedDateNumber == currentDateNumber) {\r\n        td.setAttribute('data-mds-dtp-selected-day', '');\r\n        dayOfWeek = MdsPersianDateTimePicker.getWeekDayName(tdNumber - 1 < 0 ? 0 : tdNumber - 1, setting.isGregorian);\r\n      }\r\n\r\n      // روزهای تعطیل\r\n      for (j = 0; j < holidaysDateNumbers.length; j++) {\r\n        if (holidaysDateNumbers[j] != currentDateNumber) continue;\r\n        td.classList.add('text-danger');\r\n        break;\r\n      }\r\n\r\n      // روز جمعه شمسی\r\n      if (!setting.isGregorian && tdNumber == 6) {\r\n        td.classList.add('text-danger');\r\n      }\r\n      // روز یکشنبه میلادی\r\n      else if (setting.isGregorian && tdNumber == 0) {\r\n        td.classList.add('text-danger');\r\n      }\r\n\r\n      // روزهای غیر فعال شده\r\n      if (setting.disableBeforeToday) {\r\n        if (currentDateNumber < todayDateNumber) td.setAttribute('disabled', '');\r\n        if (nextMonthDateNumber < todayDateNumber)\r\n          nextMonthButtonDisabledAttribute = 'disabled';\r\n        if (nextYearDateNumber < todayDateNumber)\r\n          nextYearButtonDisabledAttribute = 'disabled';\r\n        if (previousMonthDateNumber < todayDateNumber)\r\n          previousMonthButtonDisabledAttribute = 'disabled';\r\n        if (previousYearDateNumber < todayDateNumber)\r\n          previousYearButtonDisabledAttribute = 'disabled';\r\n        for (j = 1; j <= 12; j++) {\r\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] < todayDateNumber)\r\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n        }\r\n      }\r\n      if (setting.disableAfterToday) {\r\n        if (currentDateNumber > todayDateNumber) td.setAttribute('disabled', '');\r\n        if (nextMonthDateNumber > todayDateNumber)\r\n          nextMonthButtonDisabledAttribute = 'disabled';\r\n        if (nextYearDateNumber > todayDateNumber)\r\n          nextYearButtonDisabledAttribute = 'disabled';\r\n        if (previousMonthDateNumber > todayDateNumber)\r\n          previousMonthButtonDisabledAttribute = 'disabled';\r\n        if (previousYearDateNumber > todayDateNumber)\r\n          previousYearButtonDisabledAttribute = 'disabled';\r\n        for (j = 1; j <= 12; j++) {\r\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] > todayDateNumber)\r\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n        }\r\n      }\r\n      if (disableAfterDateTimeNumber) {\r\n        if (currentDateNumber > disableAfterDateTimeNumber) td.setAttribute('disabled', '');\r\n        if (nextMonthDateNumber > disableAfterDateTimeNumber)\r\n          nextMonthButtonDisabledAttribute = 'disabled';\r\n        if (nextYearDateNumber > disableAfterDateTimeNumber)\r\n          nextYearButtonDisabledAttribute = 'disabled';\r\n        if (previousMonthDateNumber > disableAfterDateTimeNumber)\r\n          previousMonthButtonDisabledAttribute = 'disabled';\r\n        if (previousYearDateNumber > disableAfterDateTimeNumber)\r\n          previousYearButtonDisabledAttribute = 'disabled';\r\n        for (j = 1; j <= 12; j++) {\r\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] > disableAfterDateTimeNumber)\r\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n        }\r\n      }\r\n      if (disableBeforeDateTimeNumber) {\r\n        if (currentDateNumber < disableBeforeDateTimeNumber) td.setAttribute('disabled', '');\r\n        if (nextMonthDateNumber < disableBeforeDateTimeNumber)\r\n          nextMonthButtonDisabledAttribute = 'disabled';\r\n        if (nextYearDateNumber < disableBeforeDateTimeNumber)\r\n          nextYearButtonDisabledAttribute = 'disabled';\r\n        if (previousMonthDateNumber < disableBeforeDateTimeNumber)\r\n          previousMonthButtonDisabledAttribute = 'disabled';\r\n        if (previousYearDateNumber < disableBeforeDateTimeNumber)\r\n          previousYearButtonDisabledAttribute = 'disabled';\r\n        for (j = 1; j <= 12; j++) {\r\n          if (monthsDateNumberAndAttr['month' + j.toString() + 'DateNumber'] < disableBeforeDateTimeNumber)\r\n            monthsDateNumberAndAttr['selectMonth' + j.toString() + 'ButtonCssClass'] = 'disabled';\r\n        }\r\n      }\r\n      for (j = 0; j < disabledDatesNumber.length; j++) {\r\n        if (currentDateNumber == disabledDatesNumber[j])\r\n          td.setAttribute('disabled', '');\r\n      }\r\n      for (j = 0; j < specialDatesNumber.length; j++) {\r\n        if (currentDateNumber == specialDatesNumber[j])\r\n          td.setAttribute('data-special-date', '');\r\n      }\r\n      if (setting.disabledDays != null && setting.disabledDays.length > 0 && setting.disabledDays.indexOf(tdNumber) >= 0) {\r\n        td.setAttribute('disabled', '');\r\n      }\r\n      // \\\\\r\n\r\n      if (setting.rangeSelector) {\r\n        if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\r\n          td.classList.add('selected-range-days-start-end');\r\n        else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\r\n          td.classList.add('selected-range-days');\r\n      }\r\n\r\n      tr.appendChild(td);\r\n      isTrAppended = false;\r\n\r\n      tdNumber++;\r\n      cellNumber++;\r\n    }\r\n\r\n    if (tdNumber >= 7) {\r\n      tdNumber = 0;\r\n      daysHtml += tr.outerHTML;\r\n      isTrAppended = true;\r\n      tr = document.createElement('TR');\r\n    }\r\n\r\n    // روزهای ماه بعد\r\n    let nextMonthDateTimeJson = MdsPersianDateTimePicker.addMonthToDateTimeJson(dateTimeToShowJson, 1, setting.isGregorian);\r\n    for (i = 1; i <= 42 - cellNumber; i++) {\r\n      dayNumberInString = setting.isGregorian ? MdsPersianDateTimePicker.zeroPad(i) : MdsPersianDateTimePicker.toPersianNumber(MdsPersianDateTimePicker.zeroPad(i));\r\n      currentDateNumber = MdsPersianDateTimePicker.convertToNumber2(nextMonthDateTimeJson.year, nextMonthDateTimeJson.month, i);\r\n      td = document.createElement('TD');\r\n      td.setAttribute('data-nm', '');\r\n      td.setAttribute('data-number', currentDateNumber.toString());\r\n      td.innerHTML = dayNumberInString;\r\n      if (setting.rangeSelector) {\r\n        if (currentDateNumber == rangeSelectorStartDateNumber || currentDateNumber == rangeSelectorEndDateNumber)\r\n          td.classList.add('selected-range-days-start-end');\r\n        else if (rangeSelectorStartDateNumber > 0 && rangeSelectorEndDateNumber > 0 && currentDateNumber > rangeSelectorStartDateNumber && currentDateNumber < rangeSelectorEndDateNumber)\r\n          td.classList.add('selected-range-days-nm');\r\n      }\r\n      // روز جمعه\r\n      if (!setting.isGregorian && tdNumber == 6)\r\n        td.classList.add('text-danger');\r\n      // روز یکشنبه\r\n      else if (setting.isGregorian && tdNumber == 0)\r\n        td.classList.add('text-danger');\r\n      tr.appendChild(td);\r\n      tdNumber++;\r\n      if (tdNumber >= 7) {\r\n        tdNumber = 0;\r\n        daysHtml += tr.outerHTML;\r\n        isTrAppended = true;\r\n        tr = document.createElement('TR');\r\n      }\r\n    }\r\n\r\n    if (!isTrAppended) {\r\n      daysHtml += tr.outerHTML;\r\n      isTrAppended = true;\r\n    }\r\n\r\n    html = html.replace(/\\{\\{currentMonthInfo\\}\\}/img, currentMonthInfo);\r\n    html = html.replace(/\\{\\{selectedYear\\}\\}/img, selectedYear);\r\n    html = html.replace(/\\{\\{selectedMonthName\\}\\}/img, selectedMonthName);\r\n    html = html.replace(/\\{\\{daysHtml\\}\\}/img, daysHtml);\r\n    html = html.replace(/\\{\\{previousYearButtonDisabledAttribute\\}\\}/img, previousYearButtonDisabledAttribute);\r\n    html = html.replace(/\\{\\{previousYearButtonDateNumber\\}\\}/img, previousYearDateNumber.toString());\r\n    html = html.replace(/\\{\\{previousMonthButtonDisabledAttribute\\}\\}/img, previousMonthButtonDisabledAttribute);\r\n    html = html.replace(/\\{\\{previousMonthButtonDateNumber\\}\\}/img, previousMonthDateNumber.toString());\r\n    html = html.replace(/\\{\\{selectYearButtonDisabledAttribute\\}\\}/img, selectYearButtonDisabledAttribute);\r\n    html = html.replace(/\\{\\{nextMonthButtonDisabledAttribute\\}\\}/img, nextMonthButtonDisabledAttribute);\r\n    html = html.replace(/\\{\\{nextMonthButtonDateNumber\\}\\}/img, nextMonthDateNumber.toString());\r\n    html = html.replace(/\\{\\{nextYearButtonDisabledAttribute\\}\\}/img, nextYearButtonDisabledAttribute);\r\n    html = html.replace(/\\{\\{nextYearButtonDateNumber\\}\\}/img, nextYearDateNumber.toString());\r\n    html = html.replace(/\\{\\{dropDownMenuMonth1DateNumber\\}\\}/img, monthsDateNumberAndAttr.month1DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth2DateNumber\\}\\}/img, monthsDateNumberAndAttr.month2DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth3DateNumber\\}\\}/img, monthsDateNumberAndAttr.month3DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth4DateNumber\\}\\}/img, monthsDateNumberAndAttr.month4DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth5DateNumber\\}\\}/img, monthsDateNumberAndAttr.month5DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth6DateNumber\\}\\}/img, monthsDateNumberAndAttr.month6DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth7DateNumber\\}\\}/img, monthsDateNumberAndAttr.month7DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth8DateNumber\\}\\}/img, monthsDateNumberAndAttr.month8DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth9DateNumber\\}\\}/img, monthsDateNumberAndAttr.month9DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth10DateNumber\\}\\}/img, monthsDateNumberAndAttr.month10DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth11DateNumber\\}\\}/img, monthsDateNumberAndAttr.month11DateNumber);\r\n    html = html.replace(/\\{\\{dropDownMenuMonth12DateNumber\\}\\}/img, monthsDateNumberAndAttr.month12DateNumber);\r\n    html = html.replace(/\\{\\{selectMonth1ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth1ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth2ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth2ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth3ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth3ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth4ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth4ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth5ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth5ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth6ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth6ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth7ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth7ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth8ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth8ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth9ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth9ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth10ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth10ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth11ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth11ButtonCssClass);\r\n    html = html.replace(/\\{\\{selectMonth12ButtonCssClass\\}\\}/img, monthsDateNumberAndAttr.selectMonth12ButtonCssClass);\r\n\r\n    return html;\r\n  }\r\n  private hideYearsBox = (element: Element, setting: MdsPersianDateTimePickerSetting): void => {\r\n    if (setting.inLine) {\r\n      const dtpInLine = element.closest('[data-mds-dtp-guid]');\r\n      if (dtpInLine == null) return;\r\n      const dtpInlineHeaderElement = dtpInLine.querySelector('[mds-dtp-inline-header]');\r\n      if (this.tempTitleString && dtpInlineHeaderElement != null)\r\n        dtpInlineHeaderElement.innerHTML = this.tempTitleString;\r\n      const yearListBoxElement = dtpInLine.querySelector('[data-mds-dtp-year-list-box]');\r\n      if (yearListBoxElement != null) {\r\n        yearListBoxElement.classList.add('w-0');\r\n        yearListBoxElement.innerHTML = '';\r\n      }\r\n      const inlineYearsContainerElement = dtpInLine.querySelector('[data-name=\"dtp-years-container\"]');\r\n      if (inlineYearsContainerElement != null) {\r\n        inlineYearsContainerElement.classList.add('w-0');\r\n        inlineYearsContainerElement.innerHTML = '';\r\n      }\r\n      dtpInLine.classList.remove('overflow-hidden');\r\n    } else {\r\n      const popoverOrModalElement = setting.modalMode ? this.getModal() : this.getPopover(element);\r\n      if (popoverOrModalElement == null) return;\r\n      if (this.tempTitleString) {\r\n        if (setting.modalMode)\r\n          popoverOrModalElement.querySelector('[data-mds-dtp-title] .modal-title')!.innerHTML = this.tempTitleString;\r\n        else {\r\n          popoverOrModalElement.querySelector('[data-mds-dtp-title]')!.innerHTML = this.tempTitleString;\r\n        }\r\n        popoverOrModalElement.querySelector('[data-name=\"mds-dtp-body\"]')!.removeAttribute('hidden');\r\n      }\r\n      const yearListBox = popoverOrModalElement.querySelector('[data-mds-dtp-year-list-box]');\r\n      yearListBox!.classList.add('w-0');\r\n      yearListBox!.innerHTML = '';\r\n    }\r\n  }\r\n  private showYearsBox = (element: Element): void => {\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) {\r\n      return;\r\n    }\r\n    const setting = instance.setting;\r\n    const mdDatePickerContainer = setting.inLine ? element.closest('[data-mds-dtp-guid]') : element.closest('[data-mds-dtp]');\r\n    if (mdDatePickerContainer == null) return;\r\n    this.tempTitleString = setting.inLine\r\n      ? mdDatePickerContainer.querySelector('[mds-dtp-inline-header]')!.textContent!.trim()\r\n      : mdDatePickerContainer.querySelector('[data-mds-dtp-title]')!.textContent!.trim();\r\n    const yearsToSelectObject = this.getYearsBoxBodyHtml(setting, 0);\r\n    const dateTimePickerYearsToSelectHtml = yearsToSelectObject.html;\r\n    const dateTimePickerYearsToSelectContainer = mdDatePickerContainer.querySelector('[data-mds-dtp-year-list-box]');\r\n    this.setPopoverHeaderHtml(element, setting, this.getYearsBoxHeaderHtml(setting, yearsToSelectObject.yearStart, yearsToSelectObject.yearEnd));\r\n    dateTimePickerYearsToSelectContainer!.innerHTML = dateTimePickerYearsToSelectHtml;\r\n    dateTimePickerYearsToSelectContainer!.classList.remove('w-0');\r\n    if (setting.inLine) {\r\n      mdDatePickerContainer.classList.add('overflow-hidden')\r\n      dateTimePickerYearsToSelectContainer!.classList.add('inline');\r\n    } else if (setting.modalMode) {\r\n      mdDatePickerContainer.querySelector('[data-name=\"mds-dtp-body\"]')!.setAttribute('hidden', '');\r\n    } else {\r\n      dateTimePickerYearsToSelectContainer!.classList.remove('inline');\r\n    }\r\n  }\r\n  private changeYearList = (element: Element): void => {\r\n    // کلیک روی دکمه های عوض کردن رنج سال انتخابی\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) {\r\n      return;\r\n    }\r\n    const setting = instance.setting;\r\n    const isNext = element.getAttribute('data-year-range-button-change') == '1';\r\n    const yearStart = Number(element.getAttribute('data-year'));\r\n    const yearsToSelectObject = this.getYearsBoxBodyHtml(setting, isNext ? yearStart : yearStart - setting.yearOffset * 2);\r\n    if (setting.inLine)\r\n      element.closest('[data-mds-dtp-guid]')!.querySelector('[data-mds-dtp-year-list-box]')!.innerHTML = yearsToSelectObject.html;\r\n    else\r\n      element.closest('[data-mds-dtp]')!.querySelector('[data-mds-dtp-year-list-box]')!.innerHTML = yearsToSelectObject.html;\r\n    this.setPopoverHeaderHtml(element, setting, this.getYearsBoxHeaderHtml(setting, yearsToSelectObject.yearStart, yearsToSelectObject.yearEnd));\r\n  }\r\n  private getPopoverHeaderTitle(setting: MdsPersianDateTimePickerSetting): string {\r\n    let selectedDateToShowJson: GetDateTimeJson1;\r\n    let title = '';\r\n    if (setting.isGregorian) {\r\n      selectedDateToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDateToShow);\r\n    } else {\r\n      selectedDateToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(setting.selectedDateToShow);\r\n    }\r\n    if (setting.rangeSelector) {\r\n      const startDate = MdsPersianDateTimePicker.addMonthToDateTime(setting.selectedDateToShow, -setting.rangeSelectorMonthsToShow[0], setting.isGregorian);\r\n      const endDate = MdsPersianDateTimePicker.addMonthToDateTime(setting.selectedDateToShow, setting.rangeSelectorMonthsToShow[1], setting.isGregorian);\r\n      let statDateJson: GetDateTimeJson1;\r\n      let endDateJson: GetDateTimeJson1;\r\n      if (setting.isGregorian) {\r\n        statDateJson = MdsPersianDateTimePicker.getDateTimeJson1(startDate);\r\n        endDateJson = MdsPersianDateTimePicker.getDateTimeJson1(endDate);\r\n      } else {\r\n        statDateJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(startDate);\r\n        endDateJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(endDate);\r\n      }\r\n      const startMonthName = MdsPersianDateTimePicker.getMonthName(statDateJson.month - 1, setting.isGregorian);\r\n      const endMonthName = MdsPersianDateTimePicker.getMonthName(endDateJson.month - 1, setting.isGregorian);\r\n      title = `${startMonthName} ${statDateJson.year} - ${endMonthName} ${endDateJson.year}`;\r\n    }\r\n    else\r\n      title = `${MdsPersianDateTimePicker.getMonthName(selectedDateToShowJson.month - 1, setting.isGregorian)} ${selectedDateToShowJson.year}`;\r\n    if (!setting.isGregorian)\r\n      title = MdsPersianDateTimePicker.toPersianNumber(title);\r\n    return title;\r\n  }\r\n  private setPopoverHeaderHtml = (element: Element, setting: MdsPersianDateTimePickerSetting, htmlString: string): void => {\r\n    // element = المانی که روی آن فعالیتی انجام شده و باید عنوان تقویم آن عوض شود    \r\n    if (this.bsPopover != null) {\r\n      const popoverElement = this.getPopover(element);\r\n      if (popoverElement == null) return;\r\n      popoverElement.querySelector('[data-mds-dtp-title]')!.innerHTML = htmlString;\r\n    } else if (setting.inLine) {\r\n      let inlineTitleBox = element.closest('[data-mds-dtp-guid]')!.querySelector('[data-name=\"dtp-years-container\"]')!;\r\n      inlineTitleBox.innerHTML = htmlString;\r\n      inlineTitleBox.classList.remove('w-0');\r\n    }\r\n    else if (setting.modalMode) {\r\n      let inlineTitleBox = element.closest('[data-mds-dtp-guid]')!.querySelector('[data-mds-dtp-title] .modal-title')!;\r\n      inlineTitleBox.innerHTML = htmlString;\r\n    }\r\n  }\r\n  private getDateTimePickerBodyHtml(setting: MdsPersianDateTimePickerSetting): string {\r\n    let selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\r\n    let html = MdsPersianDateTimePicker.dateTimePickerHtmlTemplate;\r\n\r\n    html = html.replace(/\\{\\{inlineAttr\\}\\}/img, setting.inLine ? 'data-inline' : '');\r\n    html = html.replace(/\\{\\{rtlCssClass\\}\\}/img, setting.isGregorian ? '' : 'rtl');\r\n    html = html.replace(/\\{\\{selectedDateStringAttribute\\}\\}/img, setting.inLine ? '' : 'hidden');\r\n    html = html.replace(/\\{\\{goTodayText\\}\\}/img, setting.isGregorian ? MdsPersianDateTimePicker.goTodayText : MdsPersianDateTimePicker.goTodayTextPersian);\r\n    html = html.replace(/\\{\\{timePickerAttribute\\}\\}/img, setting.enableTimePicker ? '' : 'hidden');\r\n\r\n    const disabledDays = MdsPersianDateTimePicker.getDisabledDateObject(setting);\r\n    let title = '';\r\n    let todayDateString = '';\r\n    let todayDateTimeJson: GetDateTimeJson1;\r\n    let selectedDateTimeToShowJson: GetDateTimeJson1;\r\n    let disableBeforeDateTimeJson: GetDateTimeJson1 | null = disabledDays[0];\r\n    let disableAfterDateTimeJson: GetDateTimeJson1 | null = disabledDays[1];\r\n\r\n    if (setting.isGregorian) {\r\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShow);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJson1(new Date());\r\n    } else {\r\n      selectedDateTimeToShowJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(selectedDateToShow);\r\n      todayDateTimeJson = MdsPersianDateTimePicker.getDateTimeJsonPersian1(new Date());\r\n    }\r\n\r\n    title = this.getPopoverHeaderTitle(setting);\r\n    todayDateString = `${setting.isGregorian ? 'Today,' : 'امروز،'} ${todayDateTimeJson.day} ${MdsPersianDateTimePicker.getMonthName(todayDateTimeJson.month - 1, setting.isGregorian)} ${todayDateTimeJson.year}`;\r\n    if (!setting.isGregorian) {\r\n      todayDateString = MdsPersianDateTimePicker.toPersianNumber(todayDateString);\r\n    }\r\n\r\n    if (disableAfterDateTimeJson != undefined && disableAfterDateTimeJson.year <= selectedDateTimeToShowJson.year && disableAfterDateTimeJson.month < selectedDateTimeToShowJson.month)\r\n      selectedDateToShow = setting.isGregorian ? new Date(disableAfterDateTimeJson.year, disableAfterDateTimeJson.month - 1, 1) : MdsPersianDateTimePicker.getDateTime1(disableAfterDateTimeJson.year, disableAfterDateTimeJson.month, disableAfterDateTimeJson.day);\r\n\r\n    if (disableBeforeDateTimeJson != undefined && disableBeforeDateTimeJson.year >= selectedDateTimeToShowJson.year && disableBeforeDateTimeJson.month > selectedDateTimeToShowJson.month)\r\n      selectedDateToShow = setting.isGregorian ? new Date(disableBeforeDateTimeJson.year, disableBeforeDateTimeJson.month - 1, 1) : MdsPersianDateTimePicker.getDateTime1(disableBeforeDateTimeJson.year, disableBeforeDateTimeJson.month, disableBeforeDateTimeJson.day);\r\n\r\n    let monthsTdHtml = '';\r\n    // let tempSelectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    let numberOfNextMonths = setting.rangeSelectorMonthsToShow[1] <= 0 ? 0 : setting.rangeSelectorMonthsToShow[1];\r\n    let numberOfPrevMonths = setting.rangeSelectorMonthsToShow[0] <= 0 ? 0 : setting.rangeSelectorMonthsToShow[0];\r\n    numberOfPrevMonths *= -1;\r\n    for (let i1 = numberOfPrevMonths; i1 < 0; i1++) {\r\n      setting.selectedDateToShow = MdsPersianDateTimePicker.addMonthToDateTime(MdsPersianDateTimePicker.getClonedDate(selectedDateToShow), i1, setting.isGregorian);\r\n      monthsTdHtml += this.getDateTimePickerMonthHtml(setting, false, true);\r\n    }\r\n    setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    monthsTdHtml += this.getDateTimePickerMonthHtml(setting, false, false);\r\n    for (let i2 = 1; i2 <= numberOfNextMonths; i2++) {\r\n      setting.selectedDateToShow = MdsPersianDateTimePicker.addMonthToDateTime(MdsPersianDateTimePicker.getClonedDate(selectedDateToShow), i2, setting.isGregorian);\r\n      monthsTdHtml += this.getDateTimePickerMonthHtml(setting, true, false);\r\n    }\r\n    // setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n\r\n    let totalMonthNumberToShow = Math.abs(numberOfPrevMonths) + 1 + numberOfNextMonths;\r\n    let monthTdStyle = totalMonthNumberToShow > 1 ? 'width: ' + (100 / totalMonthNumberToShow).toString() + '%;' : '';\r\n\r\n    monthsTdHtml = monthsTdHtml.replace(/\\{\\{monthTdStyle\\}\\}/img, monthTdStyle);\r\n\r\n    html = html.replace(/\\{\\{dtpInlineHeader\\}\\}/img, title);\r\n    html = html.replace(/\\{\\{todayDateString\\}\\}/img, todayDateString);\r\n    html = html.replace(/\\{\\{time\\}\\}/img, `${MdsPersianDateTimePicker.zeroPad(selectedDateTimeToShowJson.hour)}:${MdsPersianDateTimePicker.zeroPad(selectedDateTimeToShowJson.minute)}`);\r\n    html = html.replace(/\\{\\{monthsTdHtml\\}\\}/img, monthsTdHtml);\r\n\r\n    return html;\r\n  }\r\n  private updateCalendarBodyHtml = (element: Element, setting: MdsPersianDateTimePickerSetting, updatePopoverContent = false): void => {\r\n    const calendarHtml = this.getDateTimePickerBodyHtml(setting);\r\n    const dtpInlineHeader = calendarHtml.match(/<th mds-dtp-inline-header\\b[^>]*>(.*?)<\\/th>/img)![0];\r\n    this.tempTitleString = dtpInlineHeader;\r\n    if (!setting.inLine && updatePopoverContent) {\r\n      const popover = this.getBsPopoverInstance();\r\n      if (!popover) {\r\n        console.error(\"mds.bs.datetimepicker: `BsPopoverInstance` is null!\");\r\n        return;\r\n      }\r\n      popover.setContent({\r\n        '.popover-header': dtpInlineHeader,\r\n        '.popover-body': calendarHtml\r\n      });\r\n      return;\r\n    }\r\n    let containerElement = element.closest('[data-name=\"mds-dtp-body\"]');\r\n    if (containerElement == null) {\r\n      containerElement = element.closest('[data-mds-dtp-guid]');\r\n      if (containerElement == null) {\r\n        console.error(\"mds.bs.datetimepicker: `data-mds-dtp-guid` element not found !\")\r\n        return;\r\n      }\r\n      if (setting.modalMode)\r\n        containerElement = containerElement.querySelector('[data-name=\"mds-dtp-body\"]');\r\n    }\r\n    if (containerElement == null) {\r\n      console.error(\"mds.bs.datetimepicker: `data-mds-dtp-guid` element not found!\")\r\n      return;\r\n    }\r\n    this.setPopoverHeaderHtml(element, setting, dtpInlineHeader.trim());\r\n    containerElement.innerHTML = calendarHtml;\r\n    this.hideYearsBox(element, setting);\r\n    this.enableEvents();\r\n    this.enableInLineEvents();\r\n  }\r\n  private changeMonth = (element: Element): void => {\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) {\r\n      return;\r\n    }\r\n    if (instance.setting.disabled) return;\r\n    const dateNumber = Number(element.getAttribute('data-number'));\r\n    const setting = instance.setting;\r\n    let selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\r\n    selectedDateToShow = MdsPersianDateTimePicker.getDateTime4(dateNumber, selectedDateToShow, setting.isGregorian);\r\n    setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\r\n    this.updateCalendarBodyHtml(element, setting);\r\n    if (setting.calendarViewOnChange != undefined)\r\n      setting.calendarViewOnChange(selectedDateToShow);\r\n  }\r\n  private selectDay = (element: Element): void => {\r\n    // کلیک روی روزها\r\n    // انتخاب روز\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) return;\r\n    if (instance.setting.disabled || element.getAttribute('disabled') != undefined)\r\n      return;\r\n    let dateNumber = Number(element.getAttribute('data-number'));\r\n    const setting = instance.setting;\r\n    const disabled = element.getAttribute('disabled') != undefined;\r\n    if (setting.selectedDate != undefined && !setting.enableTimePicker) {\r\n      setting.selectedDate.setHours(0);\r\n      setting.selectedDate.setMinutes(0);\r\n      setting.selectedDate.setSeconds(0);\r\n    }\r\n    let selectedDateJson = !setting.selectedDate ? null : MdsPersianDateTimePicker.getDateTimeJson1(setting.selectedDate);\r\n    let selectedDateToShow = !setting.selectedDateToShow ? new Date() : MdsPersianDateTimePicker.getClonedDate(setting.selectedDateToShow);\r\n    let selectedDateToShowJson = MdsPersianDateTimePicker.getDateTimeJson1(selectedDateToShow);\r\n    if (disabled) {\r\n      if (setting.onDayClick != undefined) setting.onDayClick(setting);\r\n      return;\r\n    }\r\n    selectedDateToShow = MdsPersianDateTimePicker.getDateTime4(dateNumber, selectedDateToShow, setting.isGregorian);\r\n    if (setting.rangeSelector) { // اگر رنج سلکتور فعال بود\r\n      if (setting.rangeSelectorStartDate != null && setting.rangeSelectorEndDate != null) {\r\n        setting.selectedRangeDate = [];\r\n        setting.rangeSelectorStartDate = null;\r\n        setting.rangeSelectorEndDate = null;\r\n        let closestSelector = '[data-mds-dtp]';\r\n        if (setting.inLine)\r\n          closestSelector = '[data-mds-dtp-guid]';\r\n        element.closest(closestSelector)?.querySelectorAll('td.selected-range-days-start-end,td.selected-range-days')\r\n          .forEach(e => {\r\n            e.classList.remove('selected-range-days');\r\n            e.classList.remove('selected-range-days-start-end');\r\n          });\r\n      }\r\n      if (setting.rangeSelectorStartDate == undefined) {\r\n        element.classList.add('selected-range-days-start-end');\r\n        setting.rangeSelectorStartDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n        setting.selectedDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n        setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n      } else if (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate == undefined) {\r\n        if (setting.rangeSelectorStartDate.getTime() >= selectedDateToShow.getTime())\r\n          return;\r\n        element.classList.add('selected-range-days-start-end');\r\n        setting.rangeSelectorEndDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n        MdsPersianDateTimePicker.setSelectedData(setting);\r\n      }\r\n      MdsPersianDateTimePickerData.set(instance.guid, instance);\r\n      if (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined) {\r\n        setting.selectedRangeDate = [MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorStartDate), MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorEndDate)];\r\n        if (!setting.inLine) {\r\n          instance.hide();\r\n        } else\r\n          this.updateCalendarBodyHtml(element, setting);\r\n      }\r\n      return;\r\n    }\r\n    setting.selectedDate = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    if (setting.selectedDate != undefined && !setting.enableTimePicker) {\r\n      setting.selectedDate.setHours(0);\r\n      setting.selectedDate.setMinutes(0);\r\n      setting.selectedDate.setSeconds(0);\r\n    }\r\n    setting.selectedDateToShow = MdsPersianDateTimePicker.getClonedDate(selectedDateToShow);\r\n    if (selectedDateJson != undefined) {\r\n      if (setting.enableTimePicker) {\r\n        selectedDateJson.hour = selectedDateToShowJson.hour;\r\n        selectedDateJson.minute = selectedDateToShowJson.minute;\r\n        selectedDateJson.second = selectedDateToShowJson.second;\r\n      } else {\r\n        selectedDateJson.hour = 0;\r\n        selectedDateJson.minute = 0;\r\n        selectedDateJson.second = 0;\r\n      }\r\n      setting.selectedDate.setHours(selectedDateJson.hour);\r\n      setting.selectedDate.setMinutes(selectedDateJson.minute);\r\n      setting.selectedDate.setSeconds(selectedDateJson.second);\r\n    }\r\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\r\n    MdsPersianDateTimePicker.setSelectedData(setting);\r\n    element.setAttribute('data-mds-dtp-selected-day', '');\r\n    if (setting.toDate || setting.fromDate) {\r\n      // وقتی روی روز یکی از تقویم ها کلیک می شود\r\n      // باید تقویم دیگر نیز تغییر کند و روزهایی از آن غیر فعال شود\r\n      const toDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-to-date]`);\r\n      const fromDateElement = document.querySelector(`[data-mds-dtp-group=\"${setting.groupId}\"][data-from-date]`);\r\n      if (setting.fromDate && toDateElement != undefined) {\r\n        const instance = MdsPersianDateTimePicker.getInstance(toDateElement);\r\n        if (instance != null) {\r\n          if (setting.inLine)\r\n            this.updateCalendarBodyHtml(toDateElement, instance.setting);\r\n          else\r\n            instance.initializeBsPopover(instance.setting);\r\n        }\r\n      } else if (setting.toDate && fromDateElement != undefined) {\r\n        const instance = MdsPersianDateTimePicker.getInstance(fromDateElement);\r\n        if (instance != null) {\r\n          if (setting.inLine)\r\n            this.updateCalendarBodyHtml(fromDateElement, instance.setting);\r\n          else\r\n            instance.initializeBsPopover(instance.setting);\r\n        }\r\n      } else\r\n        this.updateCalendarBodyHtml(element, setting);\r\n    } else {\r\n      this.updateCalendarBodyHtml(element, setting, true);\r\n    }\r\n    if (setting.onDayClick != undefined)\r\n      setting.onDayClick(setting);\r\n    if (!setting.inLine) {\r\n      instance.hide();\r\n    } else {\r\n      // حذف روزهای انتخاب شده در تقویم این لاین\r\n      element.closest(`[data-mds-dtp-guid=\"${this.guid}\"]`)!\r\n        .querySelectorAll('[data-day]')\r\n        .forEach(e => e.removeAttribute('data-mds-dtp-selected-day'));\r\n    }\r\n  }\r\n  private hoverOnDays = (e: Event): void => {\r\n    // هاور روی روزها\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) return;\r\n    const setting = instance.setting;\r\n\r\n    if (element.getAttribute('disabled') != undefined || !setting.rangeSelector ||\r\n      (setting.rangeSelectorStartDate != undefined && setting.rangeSelectorEndDate != undefined)) return;\r\n\r\n    const dateNumber = Number(element.getAttribute('data-number'));\r\n    const allDayElements: Element[] = [].slice.call(document.querySelectorAll('td[data-day]'));\r\n    allDayElements.forEach(e => {\r\n      e.classList.remove('selected-range-days');\r\n      e.classList.remove('selected-range-days-nm');\r\n    });\r\n\r\n    const allNextOrPrevMonthDayElements: Element[] = [].slice.call(document.querySelectorAll('td[data-nm]'));\r\n    allNextOrPrevMonthDayElements.forEach(e => {\r\n      e.classList.remove('selected-range-days');\r\n      e.classList.remove('selected-range-days-nm');\r\n    });\r\n\r\n    const rangeSelectorStartDate = !setting.rangeSelectorStartDate ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorStartDate);\r\n    const rangeSelectorEndDate = !setting.rangeSelectorEndDate ? undefined : MdsPersianDateTimePicker.getClonedDate(setting.rangeSelectorEndDate);\r\n    let rangeSelectorStartDateNumber = 0;\r\n    let rangeSelectorEndDateNumber = 0;\r\n\r\n    if (setting.isGregorian) {\r\n      rangeSelectorStartDateNumber = !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorStartDate);\r\n      rangeSelectorEndDateNumber = !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber3(rangeSelectorEndDate);\r\n    } else {\r\n      rangeSelectorStartDateNumber = !rangeSelectorStartDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorStartDate));\r\n      rangeSelectorEndDateNumber = !rangeSelectorEndDate ? 0 : MdsPersianDateTimePicker.convertToNumber1(MdsPersianDateTimePicker.getDateTimeJsonPersian1(rangeSelectorEndDate));\r\n    }\r\n\r\n    if (rangeSelectorStartDateNumber > 0 && dateNumber > rangeSelectorStartDateNumber) {\r\n      for (var i1 = rangeSelectorStartDateNumber; i1 <= dateNumber; i1++) {\r\n        allDayElements.filter(e => e.getAttribute('data-number') == i1.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\r\n          .forEach(e => e.classList.add('selected-range-days'));\r\n        allNextOrPrevMonthDayElements.filter(e => e.getAttribute('data-number') == i1.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\r\n          .forEach(e => e.classList.add('selected-range-days-nm'));\r\n      }\r\n    } else if (rangeSelectorEndDateNumber > 0 && dateNumber < rangeSelectorEndDateNumber) {\r\n      for (var i2 = dateNumber; i2 <= rangeSelectorEndDateNumber; i2++) {\r\n        allDayElements.filter(e => e.getAttribute('data-number') == i2.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\r\n          .forEach(e => e.classList.add('selected-range-days'));\r\n        allNextOrPrevMonthDayElements.filter(e => e.getAttribute('data-number') == i2.toString() && e.classList.value.indexOf('selected-range-days-start-end') <= -1)\r\n          .forEach(e => e.classList.add('selected-range-days-nm'));\r\n      }\r\n    }\r\n\r\n  }\r\n  private goToday = (e: Event): void => {\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) return;\r\n    const setting = instance.setting;\r\n    setting.selectedDateToShow = new Date();\r\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\r\n    this.updateCalendarBodyHtml(element, setting);\r\n  }\r\n  private timeChanged = (e: Event): void => {\r\n    // عوض کردن ساعت\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) return;\r\n    const setting = instance.setting;\r\n    const value: string = (<any>element).value;\r\n    if (!setting.enableTimePicker) return;\r\n    if (setting.selectedDateToShow == undefined)\r\n      setting.selectedDateToShow = new Date();\r\n    let hour = Number(value.substr(0, 2));\r\n    let minute = Number(value.substr(3, 2));\r\n    setting.selectedDateToShow = new Date(setting.selectedDateToShow.setHours(hour));\r\n    setting.selectedDateToShow = new Date(setting.selectedDateToShow.setMinutes(minute));\r\n    if (setting.selectedDate == undefined)\r\n      setting.selectedDate = new Date();\r\n    setting.selectedDate = new Date(setting.selectedDate.setHours(hour));\r\n    setting.selectedDate = new Date(setting.selectedDate.setMinutes(minute));\r\n    MdsPersianDateTimePickerData.set(instance.guid, instance);\r\n    MdsPersianDateTimePicker.setSelectedData(setting);\r\n  }\r\n  private enableMainEvents(): void {\r\n    if (this.setting.inLine) return;\r\n    if (this.bsPopover != null) {\r\n      this.element.addEventListener('shown.bs.popover', this.popoverOrModalShownEvent);\r\n      this.element.addEventListener('hidden.bs.popover', this.popoverOrModalHiddenEvent);\r\n      this.element.addEventListener('inserted.bs.popover', this.popoverInsertedEvent);\r\n      this.element.addEventListener('click', this.showPopoverEvent, true);\r\n    } else if (this.bsModal != null) {\r\n      const modalElement = this.getModal();\r\n      if (modalElement == null) {\r\n        console.error(\"mds.bs.datetimepicker: `modalElement` not found!\");\r\n        return;\r\n      }\r\n      modalElement.addEventListener('shown.bs.modal', this.popoverOrModalShownEvent);\r\n      modalElement.addEventListener('hidden.bs.modal', this.popoverOrModalHiddenEvent);\r\n    }\r\n  }\r\n  private popoverInsertedEvent = (e: Event): void => {\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) return;\r\n    const setting = instance.setting;\r\n    this.hideYearsBox(element, setting);\r\n  }\r\n  private popoverOrModalShownEvent = (): void => {\r\n    this.enableEvents();\r\n  }\r\n  private popoverOrModalHiddenEvent = (): void => {\r\n    this.disableEvents();\r\n  }\r\n  private enableInLineEvents(): void {\r\n    if (!this.setting.inLine) return;\r\n    setTimeout(() => {\r\n      const dtp = document.querySelector(`[data-mds-dtp-guid=\"${this.guid}\"]`);\r\n      if (dtp != null) {\r\n        dtp.querySelector('[data-mds-dtp-time]')?.addEventListener('change', this.timeChanged, false);\r\n        dtp.addEventListener('click', this.selectCorrectClickEvent);\r\n        dtp.querySelectorAll('[data-day]').forEach(e => e.addEventListener('mouseenter', this.hoverOnDays, true));\r\n      }\r\n    }, 100);\r\n  }\r\n  private enableEvents(): void {\r\n    if (this.setting.inLine) return;\r\n    setTimeout(() => {\r\n      document.addEventListener('click', this.selectCorrectClickEvent, false);\r\n      document.querySelector('html')!.addEventListener('click', this.hidePopoverEvent, true);\r\n      document.querySelectorAll('[data-mds-dtp-time]').forEach(e => e.addEventListener('change', this.timeChanged, false));\r\n      document.querySelectorAll('[data-mds-dtp] [data-day]').forEach(e => e.addEventListener('mouseenter', this.hoverOnDays, true));\r\n    }, 500);\r\n  }\r\n  private disableEvents(): void {\r\n    document.removeEventListener('click', this.selectCorrectClickEvent);\r\n    document.querySelector('html')!.removeEventListener('click', this.hidePopoverEvent);\r\n    document.querySelectorAll('[data-mds-dtp-time]')?.forEach(e => e.removeEventListener('change', this.timeChanged));\r\n    document.querySelectorAll('[data-mds-dtp] [data-day]').forEach(e => e.removeEventListener('mouseenter', this.hoverOnDays));\r\n    const dtp = document.querySelector(`[data-mds-dtp-guid=\"${this.guid}\"]`);\r\n    if (dtp != null) {\r\n      dtp.removeEventListener('click', this.selectCorrectClickEvent, false);\r\n      dtp.querySelectorAll('[data-day]')?.forEach(e => e.removeEventListener('mouseenter', this.hoverOnDays, true));\r\n    }\r\n  }\r\n  private selectCorrectClickEvent = (e: Event): void => {\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (!instance) return;\r\n    if (instance != null && (instance.setting.disabled || instance.element.getAttribute('disabled') != undefined))\r\n      return;\r\n    if (element.getAttribute('mds-pdtp-select-year-button') != null) {\r\n      instance.showYearsBox(element);\r\n    } else if (element.getAttribute('data-mds-dtp-go-today') != null) {\r\n      this.goToday(e);\r\n    } else if (element.getAttribute('data-day') != null) {\r\n      this.selectDay(element);\r\n    } else if (element.getAttribute('data-mds-hide-year-list-box')) {\r\n      this.hideYearsBox(element, instance.setting);\r\n    } else if (element.getAttribute('data-change-date-button')) {\r\n      this.changeMonth(element);\r\n    } else if (element.getAttribute('data-year-range-button-change') != null && element.getAttribute('disabled') == null) {\r\n      this.changeYearList(element);\r\n    }\r\n  }\r\n  private showPopoverEvent = (e: Event): void => {\r\n    MdsPersianDateTimePickerData.getAll().forEach(i => i.hide());\r\n    const element = <Element>e.target;\r\n    const instance = MdsPersianDateTimePicker.getInstance(element);\r\n    if (instance == null || instance.setting.disabled) return;\r\n    instance.show();\r\n  }\r\n  private hidePopoverEvent = (e: Event): void => {\r\n    const element = <Element>e.target;\r\n    if (element.tagName == 'HTML') {\r\n      MdsPersianDateTimePickerData.getAll().forEach(i => !i.setting.modalMode ? i.hide() : () => { });\r\n      return;\r\n    }\r\n    const isWithinDatePicker = element.closest('[data-mds-dtp]') != null || element.getAttribute('data-mds-dtp-guid') != null || element.getAttribute('data-mds-dtp-go-today') != null;\r\n    if (!isWithinDatePicker) {\r\n      MdsPersianDateTimePickerData.getAll().forEach(i => i.hide());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * نمایش تقویم\r\n   */\r\n  show(): void {\r\n    this.bsModal?.show();\r\n    this.bsPopover?.show();\r\n  }\r\n  /**\r\n   * مخفی کردن تقویم\r\n   */\r\n  hide(): void {\r\n    this.bsModal?.hide();\r\n    this.bsPopover?.hide();\r\n  }\r\n  /**\r\n   * مخفی یا نمایش تقویم \r\n   */\r\n  toggle(): void {\r\n    if (this.bsPopover == null) return;\r\n    this.bsPopover.toggle();\r\n  }\r\n  /**\r\n   * فعال کردن تقویم\r\n   */\r\n  enable(): void {\r\n    this.setting.disabled = false;\r\n    this.element.removeAttribute(\"disabled\");\r\n    MdsPersianDateTimePickerData.set(this.guid, this);\r\n    if (this.bsPopover != null)\r\n      this.bsPopover.enable();\r\n  }\r\n  /**\r\n   * غیر فعال کردن تقویم\r\n   */\r\n  disable(): void {\r\n    this.setting.disabled = true;\r\n    this.element.setAttribute(\"disabled\", '');\r\n    MdsPersianDateTimePickerData.set(this.guid, this);\r\n    if (this.bsPopover != null)\r\n      this.bsPopover.disable();\r\n  }\r\n  /**\r\n   * بروز کردن محل قرار گرفتن تقویم\r\n   */\r\n  updatePosition(): void {\r\n    this.bsPopover?.update();\r\n    this.bsModal?.handleUpdate();\r\n  }\r\n  /**\r\n   * به روز کردن متن نمایش تاریخ روز انتخاب شده\r\n   */\r\n  updateSelectedDateText(): void {\r\n    MdsPersianDateTimePicker.setSelectedData(this.setting);\r\n  }\r\n  /**\r\n   * از بین بردن تقویم\r\n   */\r\n  dispose(): void {\r\n    if (this.bsPopover != null)\r\n      this.bsPopover.dispose();\r\n    if (this.bsModal != null)\r\n      this.bsModal.dispose();\r\n    this.element.removeEventListener('click', this.showPopoverEvent);\r\n    this.bsPopover = null;\r\n    this.bsModal = null;\r\n  }\r\n  /**\r\n   * دریافت اینستنس پاپ آور بوت استرپ\r\n   */\r\n  getBsPopoverInstance(): Popover | null {\r\n    return this.bsPopover;\r\n  }\r\n  /**\r\n   * دریافت اینستنس مدال بوت استرپ\r\n   * در صورتی که آپشن modalMode را صحیح کرده باشید\r\n   */\r\n  getBsModalInstance(): Modal | null {\r\n    return this.bsModal;\r\n  }\r\n  /**\r\n   * دریافت متن تاریخ انتخاب شده\r\n   */\r\n  getText(): string {\r\n    return MdsPersianDateTimePicker.getSelectedDateFormatted(this.setting);\r\n  }\r\n  /**\r\n   * دریافت آبجکت تاریخ انتخاب شده\r\n   */\r\n  getSelectedDate(): Date | null {\r\n    return this.setting.selectedDate;\r\n  }\r\n  /**\r\n   * دریافت آبجکت های تاریخ های انتخاب شده در مد رنج سلکتور\r\n   */\r\n  getSelectedDateRange(): Date[] {\r\n    return this.setting.selectedRangeDate;\r\n  }\r\n  /**\r\n  * بروز کردن تاریخ انتخاب شده\r\n  */\r\n  setDate(date: Date): void {\r\n    this.updateOptions({\r\n      selectedDate: date,\r\n      selectedDateToShow: date\r\n    });\r\n  }\r\n  /**\r\n  * بروز کردن تاریخ انتخاب شده با استفاده از تاریخ شمسی\r\n  */\r\n  setDatePersian(yearPersian: number, monthPersian: number, dayPersian: number): void {\r\n    const gregorianDateJson = MdsPersianDateTimePicker.toGregorian(yearPersian, monthPersian, dayPersian);\r\n    const date = new Date(gregorianDateJson.gy, gregorianDateJson.gm, gregorianDateJson.gd);\r\n    this.updateOptions({\r\n      selectedDate: date,\r\n      selectedDateToShow: date\r\n    });\r\n  }\r\n  /**\r\n  * بروز کردن رنج تاریخی انتخاب شده\r\n  */\r\n  setDateRange(startDate: Date, endDate: Date): void {\r\n    this.updateOptions({\r\n      selectedDate: startDate,\r\n      selectedDateToShow: startDate,\r\n      selectedRangeDate: [startDate, endDate]\r\n    });\r\n  }\r\n  /**\r\n  * حذف تاریخ انتخاب شده\r\n  */\r\n  clearDate(): void {\r\n    this.updateOptions({\r\n      selectedDate: null,\r\n      selectedDateToShow: new Date(),\r\n    });\r\n  }\r\n  /**\r\n   * بروز کردن تنظیمات تقویم\r\n   * @param optionName نام آپشن مورد نظر\r\n   * @param value مقدار\r\n   */\r\n  updateOption(optionName: string, value: any): void {\r\n    if (!optionName) return;\r\n    value = MdsPersianDateTimePicker.correctOptionValue(optionName, value);\r\n    (<any>this.setting)[optionName] = value;\r\n    MdsPersianDateTimePickerData.set(this.guid, this);\r\n    this.initializeBsPopover(this.setting);\r\n  }\r\n  /**\r\n   * بروز کردن تنظیمات تقویم\r\n   * @param options تنظیمات مورد نظر\r\n   */\r\n  updateOptions(options: any): void {\r\n    Object.keys(options).forEach((key) => {\r\n      (<any>this.setting)[key] = MdsPersianDateTimePicker.correctOptionValue(key, (<any>options)[key]);\r\n    });\r\n    MdsPersianDateTimePickerData.set(this.guid, this);\r\n    this.initializeBsPopover(this.setting);\r\n  }\r\n  /**\r\n * تبدیل آبجکت تاریخ به رشته\r\n * @param date آبجکت تاریخ\r\n * @param isGregorian آیا تاریخ میلادی مد نظر است یا تبدیل به شمسی شود\r\n * @param format فرمت مورد نظر برای تبدیل تاریخ به رشته\r\n */\r\n  static convertDateToString = (date: Date, isGregorian: boolean, format: string): string => {\r\n    return MdsPersianDateTimePicker.getDateTimeString(!isGregorian ? MdsPersianDateTimePicker.getDateTimeJsonPersian1(date) : MdsPersianDateTimePicker.getDateTimeJson1(date), format, isGregorian, !isGregorian);\r\n  };\r\n  /**\r\n * تبدیل آبجکت تاریخ به شمسی\r\n * @param date آبجکت تاریخ\r\n */\r\n  static convertDateToJalali = (date: Date): MdsPersianDateTimePickerConvertedDateModel => {\r\n    const dateTimeJson1 = MdsPersianDateTimePicker.getDateTimeJson1(date);\r\n    const jalaliJsonModel = MdsPersianDateTimePicker.toJalali(dateTimeJson1.year, dateTimeJson1.month, dateTimeJson1.day);\r\n    return {\r\n      year: jalaliJsonModel.jy,\r\n      month: jalaliJsonModel.jm,\r\n      day: jalaliJsonModel.jd,\r\n    }\r\n  };\r\n  /**\r\n   * دریافت اینستنس تقویم از روی المانی که تقویم روی آن فعال شده است\r\n   * @param element المانی که تقویم روی آن فعال شده\r\n   * @returns اینستنس تقویم\r\n   */\r\n  static getInstance(element: Element): MdsPersianDateTimePicker | null {\r\n    let elementGuid = element.getAttribute('data-mds-dtp-guid');\r\n    if (!elementGuid) {\r\n      elementGuid = element.closest('[data-mds-dtp-guid]')?.getAttribute('data-mds-dtp-guid') ?? null;\r\n      if (!elementGuid) {\r\n        const id = element.closest('[data-mds-dtp]')?.getAttribute('id');\r\n        if (!id)\r\n          return null;\r\n        elementGuid = document.querySelector('[aria-describedby=\"' + id + '\"]')?.getAttribute('data-mds-dtp-guid') ?? null;\r\n        if (!elementGuid)\r\n          return null;\r\n      }\r\n    };\r\n    return MdsPersianDateTimePickerData.get(elementGuid);\r\n  }\r\n\r\n  // #endregion\r\n}\r\n\r\ninterface GetDateTimeJson1 {\r\n  year: number,\r\n  month: number,\r\n  day: number,\r\n  hour: number,\r\n  minute: number,\r\n  second: number,\r\n  millisecond: number,\r\n  dayOfWeek: number\r\n}\r\n\r\ninterface JalaliJsonModel {\r\n  jy: number,\r\n  jm: number,\r\n  jd: number\r\n}\r\n\r\n\r\ninterface GregorianJsonModel {\r\n  gy: number,\r\n  gm: number,\r\n  gd: number\r\n}\r\n\r\ninterface JalCalModel {\r\n  leap: number,\r\n  gy: number,\r\n  march: number\r\n}\r\n\r\ninterface MdsPersianDateTimePickerYearToSelect {\r\n  yearStart: number,\r\n  yearEnd: number,\r\n  html: string\r\n}\r\n\r\ntype PopoverPlacement = 'auto' | 'top' | 'bottom' | 'left' | 'right';\r\n\r\nexport class MdsPersianDateTimePickerSetting {\r\n  /**\r\n   * محل قرار گرفتن تقویم\r\n   */\r\n  placement: PopoverPlacement | (() => PopoverPlacement) | undefined = 'bottom';\r\n  /**\r\n   * فعال بودن تایم پیکر\r\n   */\r\n  enableTimePicker = false;\r\n  /**\r\n   * سلکتور نمایش روز انتخاب شده\r\n   */\r\n  targetTextSelector = '';\r\n  /**\r\n   * سلکتور ذخیره تاریخ میلادی، برای روز انتخاب شده\r\n   */\r\n  targetDateSelector = '';\r\n  /**\r\n   * آیا تقویم برای کنترل روز پایانی تاریخ است\r\n   */\r\n  toDate = false;\r\n  /**\r\n   * آیا تقویم برای کنترل روز شروع تاریخ است\r\n   */\r\n  fromDate = false;\r\n  /**\r\n   * شناسه گروه در حالتی که از \r\n   * toDate\r\n   * و\r\n   * fromDate\r\n   * استفاده شده است\r\n   */\r\n  groupId = '';\r\n  /**\r\n   * آیا تقویم غیر فعال است؟\r\n   */\r\n  disabled = false;\r\n  /**\r\n   * فرمت نمایش روز انتخاب شده تقویم\r\n   */\r\n  textFormat = '';\r\n  /**\r\n   * فرمت ذخیره تاریخ میلادی انتخاب شده\r\n   */\r\n  dateFormat = '';\r\n  /**\r\n   * آیا تقویم میلادی استفاده شود؟\r\n   */\r\n  isGregorian = false;\r\n  /**\r\n   * آیا تقویم به صورت این لاین نمایش داده شود؟\r\n   */\r\n  inLine = false;\r\n  /**\r\n   * تاریخ انتخاب شده\r\n   */\r\n  selectedDate: Date | null = null;\r\n  /**\r\n   * تاریخی که نمایش تقویم از آن شروع می شود\r\n   */\r\n  selectedDateToShow = new Date();\r\n  /**\r\n   * تعداد سال های قابل نمایش در لیست سال های قابل انتخاب\r\n   */\r\n  yearOffset = 15;\r\n  /**\r\n   * تاریخ میلادی روزهای تعطیل\r\n   */\r\n  holidays: Date[] = [];\r\n  /**\r\n   * تاریخ میلادی روزهای غیر فعال\r\n   */\r\n  disabledDates: Date[] = [];\r\n  /**\r\n   * عدد روزهایی از هفته که غیر فعال هستند\r\n   */\r\n  disabledDays: number[] = [];\r\n  /**\r\n   * تاریخ میلادی روزهای خاص\r\n   */\r\n  specialDates: Date[] = [];\r\n  /**\r\n   * آیا روزهای قبل از امروز غیر فعال شوند؟\r\n   */\r\n  disableBeforeToday = false;\r\n  /**\r\n   * آیا روزهای بعد از امروز غیر فعال شوند؟\r\n   */\r\n  disableAfterToday = false;\r\n  /**\r\n   * روزهای قبل از این تاریخ غیر فعال شود\r\n   */\r\n  disableBeforeDate: Date | null = null;\r\n  /**\r\n   * روزهای بعد از این تاریخ غیر فعال شود\r\n   */\r\n  disableAfterDate: Date | null = null;\r\n  /**\r\n   * آیا تقویم به صورت انتخاب بازه نمایش داده شود؟\r\n   */\r\n  rangeSelector = false;\r\n  /**\r\n   * تاریخ شروع تقویم در مد انتخاب بازه تاریخی برای نمایش\r\n   */\r\n  rangeSelectorStartDate: Date | null = null;\r\n  /**\r\n   * تاریخ پایان تقویم در مد انتخاب بازه تاریخی برای نمایش\r\n   */\r\n  rangeSelectorEndDate: Date | null = null;\r\n  /**\r\n   * تعداد ماه های قابل نمایش در قابلیت انتخاب بازه تاریخی\r\n   */\r\n  rangeSelectorMonthsToShow: number[] = [0, 0];\r\n  /**\r\n   * تاریخ های انتخاب شده در مد بازه انتخابی\r\n   */\r\n  selectedRangeDate: Date[] = [];\r\n  /**\r\n   * آیا تقویم به صورت مدال نمایش داده شود\r\n   */\r\n  modalMode = false;\r\n  /**\r\n   * تبدیل اعداد به فارسی\r\n   */\r\n  persianNumber = false;\r\n  /**\r\n   * رویداد عوض شدن ماه و تاریخ در دیت پیکر\r\n   * @param _ تاریخ ماه انتخابی\r\n   */\r\n  calendarViewOnChange = (_: Date) => { };\r\n  /**\r\n   * رویداد انتخاب روز در دیت پیکر\r\n   * @param _ تمامی تنظیمات دیت پیکر\r\n   */\r\n  onDayClick = (_: MdsPersianDateTimePickerSetting) => { }\r\n}\r\n\r\nexport interface MdsPersianDateTimePickerConvertedDateModel {\r\n  year: number,\r\n  month: number,\r\n  day: number,\r\n}\r\n\r\nconst MdsPersianDateTimePickerElementMap = new Map();\r\nvar MdsPersianDateTimePickerData = {\r\n  set(key: string, instance: MdsPersianDateTimePicker): void {\r\n    if (!MdsPersianDateTimePickerElementMap.has(key)) {\r\n      MdsPersianDateTimePickerElementMap.set(key, instance);\r\n      return;\r\n    }\r\n    MdsPersianDateTimePickerElementMap.set(key, instance);\r\n  },\r\n  get(key: string): MdsPersianDateTimePicker {\r\n    return MdsPersianDateTimePickerElementMap.get(key) || null;\r\n  },\r\n  getAll(): MdsPersianDateTimePicker[] {\r\n    return Array.from(MdsPersianDateTimePickerElementMap, ([_name, value]) => value);\r\n  },\r\n  remove(key: string): void {\r\n    if (!MdsPersianDateTimePickerElementMap.has(key)) {\r\n      return;\r\n    }\r\n    MdsPersianDateTimePickerElementMap.delete(key);\r\n  }\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(348);\n"],"names":["___EXPOSE_LOADER_IMPORT___","___EXPOSE_LOADER_GLOBAL_THIS___","module","exports","globalThis","g","this","Function","e","window","self","bootstrap","MdsPersianDateTimePicker","constructor","element","setting","guid","bsPopover","bsModal","tempTitleString","hideYearsBox","inLine","dtpInLine","closest","dtpInlineHeaderElement","querySelector","innerHTML","yearListBoxElement","classList","add","inlineYearsContainerElement","remove","popoverOrModalElement","modalMode","getModal","getPopover","removeAttribute","yearListBox","showYearsBox","instance","getInstance","mdDatePickerContainer","textContent","trim","yearsToSelectObject","getYearsBoxBodyHtml","dateTimePickerYearsToSelectHtml","html","dateTimePickerYearsToSelectContainer","setPopoverHeaderHtml","getYearsBoxHeaderHtml","yearStart","yearEnd","setAttribute","changeYearList","isNext","getAttribute","Number","yearOffset","htmlString","popoverElement","inlineTitleBox","updateCalendarBodyHtml","updatePopoverContent","calendarHtml","getDateTimePickerBodyHtml","dtpInlineHeader","match","popover","getBsPopoverInstance","setContent","console","error","containerElement","enableEvents","enableInLineEvents","changeMonth","disabled","dateNumber","selectedDateToShow","getClonedDate","getDateTime4","isGregorian","MdsPersianDateTimePickerData","set","undefined","calendarViewOnChange","selectDay","selectedDate","enableTimePicker","setHours","setMinutes","setSeconds","selectedDateJson","getDateTimeJson1","Date","selectedDateToShowJson","onDayClick","rangeSelector","rangeSelectorStartDate","rangeSelectorEndDate","selectedRangeDate","closestSelector","querySelectorAll","forEach","getTime","setSelectedData","hide","hour","minute","second","toDate","fromDate","toDateElement","document","groupId","fromDateElement","initializeBsPopover","hoverOnDays","target","allDayElements","slice","call","allNextOrPrevMonthDayElements","rangeSelectorStartDateNumber","rangeSelectorEndDateNumber","convertToNumber3","convertToNumber1","getDateTimeJsonPersian1","i1","filter","toString","value","indexOf","i2","goToday","timeChanged","substr","popoverInsertedEvent","popoverOrModalShownEvent","popoverOrModalHiddenEvent","disableEvents","selectCorrectClickEvent","showPopoverEvent","getAll","i","show","hidePopoverEvent","tagName","extend","MdsPersianDateTimePickerSetting","Error","textFormat","dateFormat","newGuid","static","gy","gm","gd","d2j","g2d","jy","jm","jd","d2g","j2d","jalCal","leap","n","breaks","bl","length","leapJ","jp","jump","div","mod","march","r","jdn","k","d","j","a","b","rangeSelectorMonthsToShow","setTimeout","dispose","title","getPopoverHeaderTitle","datePickerBodyHtml","tempDiv","createElement","setModalHtml","el","Modal","enableMainEvents","Popover","container","content","placement","trigger","template","popoverHtmlTemplate","sanitize","replace","c","Math","random","args","key","hasOwnProperty","dateTime","year","getFullYear","month","getMonth","day","getDate","getHours","getMinutes","getSeconds","millisecond","getMilliseconds","dayOfWeek","getDay","floor","persianDate","toJalali","yearPersian","monthPersian","dayPersian","isNumber","gregorian","toGregorian","englishWeekDayIndex","weekDayNames","weekDayNamesPersian","monthIndex","monthNames","monthNamesPersian","shortDayNames","shortDayNamesPersian","persianYear","isLeapJalaliYear","numberOfDaysInMonth","isLeapYear","dateTimeLocal","previousMonth","daysInMonth","getDaysInMonth","dateTimeJsonPersian","getDateTime1","getDaysInMonthPersian","nextMonth","dateTimeJson","getDateTimeJson2","getDateTime2","resultDate","dateNow","disableBeforeToday","disableBeforeDate","disableAfterDate","disableAfterToday","addedMonth","dateTimeJson1","Object","assign","getDateTime3","zeroPad","optionName","keys","Array","isArray","item","shortHour","amPm","addMonthToDateTimeJson","isNaN","parseFloat","isFinite","inputNumber1","str1","nr","base","len","String","join","format","persianNumber","getMonthName","getWeekDayName","getShortHour","getAmPm","toPersianNumber","getDateTimeString","disableBeforeDateTimeJson","getLesserDisableBeforeDate","disableAfterDateTimeJson","getBiggerDisableAfterDate","toDateSetting","toDateSelectedDate","fromDateSetting","fromDateSelectedDate","targetTextElement","targetTextSelector","targetDateElement","targetDateSelector","changeEvent","Event","dateTimeTextFormat","getSelectedDateTimeTextFormatted","toLowerCase","dispatchEvent","dateTimeFormat","toEnglishNumber","getSelectedDateFormatted","popoverId","getElementById","prevModalElement","modalHtml","modalHtmlTemplate","appendChild","modalDialogElement","warn","yearToStart","disabledDateObj","getDisabledDateObject","todayDateTimeJson","selectedDateTimeToShowJson","dateTimePickerYearsToSelectHtmlTemplate","yearsBoxHtml","counter","disabledAttr","currentYearDateTimeJson","convertToNumber2","currentYearDisabledAttr","yearText","yearDateNumber","todayAttr","selectedYearAttr","selectedYearTitle","currentYearText","currentYearTextPersian","cancelText","cancelTextPersian","yearsRangeText","popoverHeaderSelectYearHtmlTemplate","previousText","previousTextPersian","nextText","nextTextPersian","getDateTimePickerMonthHtml","isNextMonth","isPrevMonth","selectedDateToShowTemp","selectedDateTime","isNextOrPrevMonth","dateTimePickerMonthTableHtmlTemplate","previousYearText","previousYearTextPersian","previousMonthText","previousMonthTextPersian","nextMonthText","nextMonthTextPersian","nextYearText","nextYearTextPersian","getWeekDayShortName","firstWeekDayNumber","dateTimeToShowJson","cellNumber","tdNumber","selectedDateNumber","selectedMonthName","numberOfDaysInCurrentMonth","numberOfDaysInPreviousMonth","tr","td","daysHtml","currentDateNumber","previousMonthDateNumber","nextMonthDateNumber","previousYearDateNumber","nextYearDateNumber","dayNumberInString","monthsDateNumberAndAttr","month1DateNumber","month2DateNumber","month3DateNumber","month4DateNumber","month5DateNumber","month6DateNumber","month7DateNumber","month8DateNumber","month9DateNumber","month10DateNumber","month11DateNumber","month12DateNumber","selectMonth1ButtonCssClass","selectMonth2ButtonCssClass","selectMonth3ButtonCssClass","selectMonth4ButtonCssClass","selectMonth5ButtonCssClass","selectMonth6ButtonCssClass","selectMonth7ButtonCssClass","selectMonth8ButtonCssClass","selectMonth9ButtonCssClass","selectMonth10ButtonCssClass","selectMonth11ButtonCssClass","selectMonth12ButtonCssClass","holidaysDateNumbers","disabledDatesNumber","specialDatesNumber","previousYearButtonDisabledAttribute","previousMonthButtonDisabledAttribute","selectYearButtonDisabledAttribute","nextMonthButtonDisabledAttribute","nextYearButtonDisabledAttribute","isTrAppended","getLastDayDateOfPreviousMonth","getFirstDayDateOfNextMonth","setFullYear","setMonth","holidays","push","disabledDates","specialDates","getDateTimeJsonPersian2","todayDateNumber","selectedYear","disableBeforeDateTimeNumber","disableAfterDateTimeNumber","currentMonthInfo","previousMonthDateTimeJson","outerHTML","todayText","todayTextPersian","disabledDays","nextMonthDateTimeJson","startDate","addMonthToDateTime","endDate","statDateJson","endDateJson","startMonthName","endMonthName","dateTimePickerHtmlTemplate","goTodayText","goTodayTextPersian","todayDateString","monthsTdHtml","numberOfNextMonths","numberOfPrevMonths","totalMonthNumberToShow","abs","monthTdStyle","addEventListener","modalElement","dtp","removeEventListener","toggle","enable","disable","updatePosition","update","handleUpdate","updateSelectedDateText","getBsModalInstance","getText","getSelectedDate","getSelectedDateRange","setDate","date","updateOptions","setDatePersian","gregorianDateJson","setDateRange","clearDate","updateOption","correctOptionValue","options","elementGuid","id","get","convertDateToString","convertDateToJalali","jalaliJsonModel","_","MdsPersianDateTimePickerElementMap","Map","has","from","_name","delete","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","o","defineProperty","enumerable","obj","prop","prototype","Symbol","toStringTag"],"sourceRoot":""}